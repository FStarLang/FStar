.PHONY: verify-core verify-extra

# List the files that should be verified by verify-extra and verify-all
# NOTE: Only use files that are extracted+linked into the library,
# or they will anyway be verified when extracting it. Currently, legacy/
# is the only subdirectory that does not go into fstar.lib.
EXTRA=legacy/FStar.Pointer.Base.fst

# List the files that should NOT be verified at all
FLAKY=legacy/FStar.Relational.State.fst

# List the files that should be verified by verify-core and verify-all
# Those files are the roots from where all dependencies are computed
FSTAR_FILES := $(filter-out $(FLAKY), \
	$(wildcard FStar.*.fst FStar.*.fsti) \
	$(wildcard LowStar.*.fst LowStar.*.fsti) \
	$(wildcard legacy/*fst legacy/*fsti) \
	)

ifneq ($(STAGE_EXPERIMENTAL),0)
FSTAR_FILES += $(filter-out $(FLAKY), \
	$(wildcard experimental/FStar.InteractiveHelpers.*fst experimental/FStar.InteractiveHelpers.*fsti) \
)
ifneq ($(STAGE_EXPERIMENTAL),1)
FSTAR_FILES += $(filter-out $(FLAKY), \
	$(wildcard experimental/*fst experimental/*fsti) \
)
endif
endif

WITH_CACHE_DIR=--cache_dir .cache --hint_dir .cache

#271 -> pattern uses theory symbols
#330 -> experimental feature
OTHERFLAGS+=--warn_error @271-330

include $(FSTAR_HOME)/.common.mk
include gmake/z3.mk
include gmake/fstar.mk
include gmake/Makefile.tmpl
# Default rule is verify-all, defined in gmake/Makefile.tmpl

%.fst-in:
	@echo --use_hints --hint_info

# bumping the rlimit for these files
%LowStar.Monotonic.Buffer.fst.checked: OTHERFLAGS+=--z3rlimit_factor 4

#turn off 271 (pattern uses theory symbols warning), to be fixed soon
%FStar.UInt.fsti.checked: OTHERFLAGS+=--warn_error -271
%FStar.UInt.fst.checked: OTHERFLAGS+=--warn_error -271
%FStar.ModifiesGen.fst.checked: OTHERFLAGS+=--warn_error -271

#these are legacy files that should go away soon
%FStar.Buffer.fst.checked: OTHERFLAGS+=--warn_error -271
%FStar.Buffer.Quantifiers.fst.checked: OTHERFLAGS+=--warn_error -271

verify-core: $(filter-out $(addprefix %, $(addsuffix .checked, $(notdir $(EXTRA)))), $(ALL_CHECKED_FILES))
verify-extra: $(filter $(addprefix %, $(addsuffix .checked, $(notdir $(EXTRA)))), $(ALL_CHECKED_FILES))

%.checked:
	$(call msg, "CHECK", $(basename $(notdir $@)))
	@# MY_FSTAR is imported from ulib/gmake.Makefile.tmpl, so it does not
	@# contain the $(SIL) flag nor the $(RUNLIM) for monitoring resources.
	@# You can debug with --debug $(basename $(notdir $<))
	$(Q)$(RUNLIM) $(MY_FSTAR) $(SIL) $(COMPAT_INDEXED_EFFECTS) $<

# Benchmarking rules
#
# we want to run FStar with just the target file as that being checked
# ideally all the .checked files will exist and we will:
#  - move them to the side
#  - execute the benchmark
#  - move the checked file back
#
# phony-benchmark target to ensure bench rules always run on:
#  make -C ulib benchmark

.PHONY: phony-benchmark

phony-benchmark:

# We use -f to check the file even if a valid .checked already exists
# And remove --cache_checked_modules so we don't update them
%.fst.bench: %.fst phony-benchmark
	$(BENCHMARK_PRE) $(filter-out --cache_checked_modules, $(MY_FSTAR)) -f $*.fst

%.fsti.bench: %.fsti phony-benchmark
	$(BENCHMARK_PRE) $(filter-out --cache_checked_modules, $(MY_FSTAR)) -f $*.fsti

verify-benchmark: $(addsuffix .bench, $(filter-out $(EXTRA) ,$(FSTAR_FILES)))
