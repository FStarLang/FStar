.PHONY: verify-core verify-extra

# List the files that should be verified by verify-extra and verify-all
EXTRA=legacy/FStar.Pointer.Base.fst

# List the files that should NOT be verified at all
FLAKY=legacy/FStar.Relational.State.fst

# List the files that should be verified by verify-core and verify-all
# Those files are the roots from where all dependencies are computed
FSTAR_FILES := $(filter-out $(FLAKY), \
	$(wildcard FStar.*.fst FStar.*.fsti) \
	$(wildcard LowStar.*.fst LowStar.*.fsti) \
	$(wildcard legacy/*fst legacy/*fsti) \
	$(wildcard experimental/*fst experimental/*fsti))

USE_EXTRACTED_INTERFACES=--use_extracted_interfaces true

CACHE_DIR=--cache_dir .cache --hint_dir .cache

OTHERFLAGS+=$(USE_EXTRACTED_INTERFACES)

include gmake/z3.mk
include gmake/fstar.mk
include gmake/Makefile.tmpl
# Default rule is verify-all, defined in gmake/Makefile.tmpl

%.fst-in:
	@echo --use_hints --hint_info

# bumping the rlimit for these files
# JP: this is ineffective since the entries in .depend are of the form
# $(FSTAR_HOME)/ulib/.cache/Foo.fst.checked
.cache/FStar.ModifiesGen.fst.checked: OTHERFLAGS+=--z3rlimit_factor 8
.cache/LowStar.Monotonic.Buffer.fst.checked: OTHERFLAGS+=--z3rlimit_factor 4

# disabling USE_EXTRACTED_INTERFACES for these files
# Something's wrong with how the normalization attributes are propagated when this
# this option is turned on
# JP: same here
.cache/LowStar.Printf.fst.checked: USE_EXTRACTED_INTERFACES=

verify-core: $(filter-out $(addprefix %, $(addsuffix .checked, $(notdir $(EXTRA)))), $(ALL_CHECKED_FILES))
verify-extra: $(filter $(addprefix %, $(addsuffix .checked, $(notdir $(EXTRA)))), $(ALL_CHECKED_FILES))

%.checked:
	$(MY_FSTAR) $<

# Benchmarking rules
#
# we want to run FStar with just the target file as that being checked
# ideally all the .checked files will exist and we will:
#  - move them to the side
#  - execute the benchmark
#  - move the checked file back
#
# phony-benchmark target to ensure bench rules always run on:
#  make -C ulib benchmark

.PHONY: phony-benchmark

phony-benchmark:

# a.fst.bench will move the a.fst.checked binary and then move it back
%.fst.bench: %.fst phony-benchmark
	-mv -f .cache/$*.fst.checked .cache/$*.fst.checked.bench_bkp
	$(BENCHMARK_PRE) $(MY_FSTAR) $*.fst
	-mv -f .cache/$*.fst.checked.bench_bkp .cache/$*.fst.checked

# a.fsti.bench will move the a.fsti.checked binary and then move it back
%.fsti.bench: %.fsti phony-benchmark
	-mv -f .cache/$*.fsti.checked .cache/$*.fsti.checked.bench_bkp
	$(BENCHMARK_PRE) $(MY_FSTAR) $*.fsti
	-mv -f .cache/$*.fsti.checked.bench_bkp .cache/$*.fsti.checked

verify-benchmark: $(addsuffix .bench, $(filter-out $(EXTRA) ,$(FSTAR_FILES)))
