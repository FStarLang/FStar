<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>e3e96b71-22ab-4518-b08e-9c55c4d256db</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>ulibfs</RootNamespace>
    <AssemblyName>ulibfs</AssemblyName>
    <OtherFlags>--nowarn:0086 --mlcompatibility --nologo</OtherFlags>
    <UseStandardResourceNames>true</UseStandardResourceNames>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Name>ulibfs</Name>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <OutputPath>..\bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\$(Configuration)\$(AssemblyName).XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <OutputPath>..\bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\$(Configuration)\$(AssemblyName).XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <MinimumVisualStudioVersion Condition="'$(MinimumVisualStudioVersion)' == ''">11</MinimumVisualStudioVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(FSharpTargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets') ">
    <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets</FSharpTargetsPath>
  </PropertyGroup>
  <Import Project="$(FSharpTargetsPath)" />
  <PropertyGroup>
    <FSTAR_HOME>..</FSTAR_HOME>
    <!-- Path where cached lax files should be written by default -->
    <FSTAR_LAX_CACHE_PATH Condition=" '$(FSTAR_LAX_CACHE_PATH)' == '' ">$(IntermediateOutputPath).cache.lax</FSTAR_LAX_CACHE_PATH>
    <!-- Custom FStar flags used in this project -->
    <FSTAR_FLAGS>--use_hints --lax --cache_checked_modules --cache_dir $(FSTAR_LAX_CACHE_PATH)</FSTAR_FLAGS>
  </PropertyGroup>
  <Import Project="$(FSTAR_HOME)\fsharp.extraction.targets" />
  <ItemGroup>
    <!-- Note, for now we just ignore some modules and or comment out some code in them. -->
    <Compile Include="fs\prims.fs" Link="prims.fs" />
    <Compile Include="fs\FStar_All.fs" Link="FStar_All.fs" />
    <Compile Include="fs\FStar_Char.fs" Link="FStar_Char.fs" />
    <Compile Include="fs\FStar_Dyn.fs" Link="FStar_Dyn.fs" />
    <Compile Include="fs\FStar_Float.fs" Link="FStar_Float.fs" />
    <Compile Include="fs\FStar_Ghost.fs" Link="FStar_Ghost.fs" />
    <Compile Include="fs\FStar_Monotonic_Heap.fs" Link="FStar_Monotonic_Heap.fs" />
    <Compile Include="fs\FStar_CommonST.fs" Link="FStar_CommonST.fs" />
    <Compile Include="fs\FStar_Heap.fs" Link="FStar_Heap.fs" />
    <Compile Include="fs\FStar_Int16.fs" Link="FStar_Int16.fs" />
    <Compile Include="fs\FStar_Int32.fs" Link="FStar_Int32.fs" />
    <Compile Include="fs\FStar_Int64.fs" Link="FStar_Int64.fs" />
    <Compile Include="fs\FStar_Int8.fs" Link="FStar_Int8.fs" />
    <Compile Include="fs\FStar_IO.fs" Link="FStar_IO.fs" />
    <Compile Include="fs\FStar_List.fs" Link="FStar_List.fs" />
    <Compile Include="fs\FStar_List_Tot_Base.fs" Link="FStar_List_Tot_Base.fs" />
    <Compile Include="fs\FStar_Mul.fs" Link="FStar_Mul.fs" />
    <Compile Include="fs\FStar_Option.fs" Link="FStar_Option.fs" />
    <Compile Include="fs\FStar_Pervasives_Native.fs" Link="FStar_Pervasives_Native.fs" />
    <!-- TODO: Set is implemented with extra 'comparison' constraint on key.
               Extracted modules that depend on Set (e.g. Map) don't respect this (i.e. constraint is not emitted).
               Moreover, both Set and Map modules restrict key with 'eqtype' which only gives decidable equality,
               but we should require ordering.

               So there are two points to address:
               1. Emitting constraints for type parameters when extracting F# code (e.g. for eqtype or 'ordered')
               2. Add 'type ordered = Type{hasOrder 'a}' or similar and use it instead of 'eqtype' in Set/Map interface.
    -->
    <Compile Include="fs\FStar_Set.fs" Link="FStar_Set.fs" />
    <Compile Include="fs\FStar_ST.fs" Link="FStar_ST.fs" />
    <Compile Include="fs\FStar_Exn.fs" Link="FStar_Exn.fs" />
    <Compile Include="fs\FStar_String.fs" Link="FStar_String.fs" />
    <Compile Include="fs\FStar_UInt16.fs" Link="FStar_UInt16.fs" />
    <Compile Include="fs\FStar_UInt32.fs" Link="FStar_UInt32.fs" />
    <Compile Include="fs\FStar_UInt64.fs" Link="FStar_UInt64.fs" />
    <Compile Include="fs\FStar_UInt8.fs" Link="FStar_UInt8.fs" />
    <!-- <Compile Include="fs\FStar_Tactics_Builtins.fs" Link="FStar_Tactics_Builtins.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Reflection_Types.fs" Link="FStar_Reflection_Types.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Reflection_Builtins.fs" Link="FStar_Reflection_Builtins.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Reflection_Data.fs" Link="FStar_Reflection_Data.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Tactics_Result.fs" Link="FStar_Tactics_Result.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Tactics_Types.fs" Link="FStar_Tactics_Types.fs" /> --> <!-- TODO: Should tactics be part of ulibfs? Separate lib? -->
    <!-- <Compile Include="fs\FStar_Bytes.fs" Link="FStar_Bytes.fs" /> --> <!-- TODO: Depends on UInt.fsti -->
    <!-- <Compile Include="fs\FStar_Util.fs" Link="FStar_Util.fs" /> --> <!-- TODO: Depends on Heap and HyperStack -->
    <!-- <Compile Include="fs\FStar_Order.fs" Link="FStar_Order.fs" /> --> <!-- TODO: FStar_Order.ml is missing in ulib/ml? -->
    <!-- <Compile Include="fs\FStar_Range.fs" Link="FStar_Range.fs" /> --> <!-- TODO: FStar_Range.ml is missing in ulib/ml? -->
    <!-- <Compile Include="fs\FStar_Vector_Base.fs" Link="FStar_Vector_Base.fs" /> --> <!-- TODO: FStar_Vector_Base.ml is missing in ulib/ml? -->
    <!-- <Compile Include="fs\FStar_Vector_Properties.fs" Link="FStar_Vector_Properties.fs" /> --> <!-- TODO: FStar_Vector_Properties.ml is missing in ulib/ml? -->
    <!-- <Compile Include="fs\FStar_Vector.fs" Link="FStar_Vector.fs" /> --> <!-- TODO: FStar_Vector.ml is missing in ulib/ml? -->
    <!-- <Compile Include="fs\FStar_TSet.fs" Link="FStar_TSet.fs" />  --> <!-- TODO: FStar_TSet.ml is missing in ulib/ml? -->
    <Compile Include="FStar.Pervasives.fst" />
    <Compile Include="FStar.Preorder.fst" />
    <Compile Include="FStar.Squash.fst" />
    <Compile Include="FStar.Classical.fst" />
    <Compile Include="FStar.FunctionalExtensionality.fst" />
    <Compile Include="FStar.StrongExcludedMiddle.fst" />
    <Compile Include="FStar.PropositionalExtensionality.fst" />
    <Compile Include="FStar.PredicateExtensionality.fst" />
    <Compile Include="fs/FStar_Map.fs" Link="FStar_Map.fs" /> <!-- TODO: Map is 'almost' extracted.
                                                                         It lacks only the constraint on the key and there's an issue
                                                                         with erasure of 'key:eqtype implicit parameter on map_val
                                                              -->
    <!-- <Compile Include="FStar.Map.fst" /> --> <!-- TODO: Doesn't work with current implementation of Set (see TODO note on Set) -->
    <Compile Include="FStar.Monotonic.Witnessed.fst" /> <!-- TODO: (Warning 341) Expected parameter 'state of witnessed to be unused in its definition and eliminated -->
    <Compile Include="FStar.List.Tot.Properties.fst" />
    <Compile Include="FStar.Monotonic.HyperHeap.fst" />
    <Compile Include="FStar.Monotonic.HyperStack.fst" /> <!-- TODO: Produces unsafe coerce -->
    <Compile Include="FStar.HyperStack.fst" />
    <Compile Include="fs\FStar_HyperStack_All.fs" Link="FStar_HyperStack_All.fs" />
    <Compile Include="fs\FStar_HyperStack_ST.fs" Link="FStar_HyperStack_ST.fs" />
    <Compile Include="fs\FStar_HyperStack_IO.fs" Link="FStar_HyperStack_IO.fs" />
    <Compile Include="FStar.Monotonic.Map.fst" /> <!-- TODO: Produces unsafe coerce -->
    <Compile Include="FStar.Seq.Base.fst" />
    <Compile Include="FStar.Seq.Properties.fst" />
    <Compile Include="FStar.Seq.fst" />
    <Compile Include="FStar.Calc.fst" />
    <Compile Include="FStar.Math.Lib.fst" />
    <Compile Include="FStar.Math.Lemmas.fst" />
    <Compile Include="FStar.BitVector.fst" />
    <Compile Include="FStar.UInt.fst" />
    <Compile Include="FStar.Int.fst" />
    <Compile Include="FStar.Int.Cast.fsti" />
    <Compile Include="FStar.Int.Cast.fst" />
    <Compile Include="FStar.UInt128.fst" />
    <!-- <Compile Include="FStar.Universe.fst" /> -->
    <!-- <Compile Include="FStar.GSet.fst" /> -->
    <!-- <Compile Include="FStar.ModifiesGen.fst" /> -->
    <Compile Include="FStar.BigOps.fst" />
    <!-- <Compile Include="LowStar.Monotonic.Buffer.fst" /> -->
    <!-- <Compile Include="LowStar.Buffer.fst" /> -->
    <!-- <Compile Include="LowStar.BufferOps.fst" /> -->
    <!-- <Compile Include="FStar.Endianness.fst" /> -->
    <!-- <Compile Include="LowStar.Endianness.fst" /> -->
    <!-- <Compile Include="LowStar.PrefixFreezableBuffer.fst" /> -->
    <!-- <Compile Include="FStar.OrdSet.fst" /> -->
    <!-- <Compile Include="FStar.OrdMap.fst" /> -->
    <!-- <Compile Include="FStar.OrdMapProps.fst" /> -->
    <!-- <Compile Include="FStar.Algebra.CommMonoid.fst" /> -->
    <!-- <Compile Include="FStar.Monotonic.Pure.fst" /> -->
    <!-- <Compile Include="LowStar.BufferCompat.fst" /> -->
    <!-- <Compile Include="LowStar.Modifies.fst" /> -->
    <!-- <Compile Include="FStar.Modifies.fst" /> -->
    <!-- <Compile Include="LowStar.ToFStarBuffer.fst" /> -->
    <!-- <Compile Include="FStar.Monotonic.Seq.fst" /> -->
    <!-- <Compile Include="FStar.Crypto.fst" /> -->
    <!-- <Compile Include="LowStar.ModifiesPat.fst" /> -->
    <Compile Include="FStar.Int128.fst" />
    <Compile Include="FStar.Integers.fst" />
    <!-- <Compile Include="LowStar.Vector.fst" /> -->
    <!-- <Compile Include="LowStar.Regional.fst" /> -->
    <!-- <Compile Include="LowStar.RVector.fst" /> -->
    <!-- <Compile Include="FStar.Seq.Sorted.fst" /> -->
    <!-- <Compile Include="FStar.OrdSetProps.fst" /> -->
    <!-- <Compile Include="LowStar.BufferView.fst" /> -->
    <!-- <Compile Include="FStar.Reader.fst" /> -->
    <!-- <Compile Include="FStar.DependentMap.fst" /> -->
    <!-- <Compile Include="FStar.Monotonic.DependentMap.fst" /> -->
    <!-- <Compile Include="LowStar.Comment.fst" /> -->
    <!-- <Compile Include="LowStar.UninitializedBuffer.fst" /> -->
    <!-- <Compile Include="FStar.Pointer.Base.fst" /> -->
    <!-- <Compile Include="FStar.Algebra.CommMonoid.Equiv.fst" /> -->
    <!-- <Compile Include="FStar.IFC.fst" /> -->
    <!-- <Compile Include="FStar.Algebra.Monoid.fst" /> -->
    <!-- <Compile Include="FStar.MarkovsPrinciple.fst" /> -->
    <!-- <Compile Include="FStar.Math.Euclid.fst" /> -->
    <!-- <Compile Include="FStar.Relational.Relational.fst" /> -->
    <!-- <Compile Include="FStar.Relational.Comp.fst" /> -->
    <!-- <Compile Include="LowStar.BufferView.Down.fst" /> -->
    <!-- <Compile Include="LowStar.BufferView.Up.fst" /> -->
    <Compile Include="FStar.Ref.fst" />
    <!-- <Compile Include="FStar.Pointer.fst" /> -->
    <!-- <Compile Include="LowStar.Regional.Instances.fst" /> -->
    <!-- <Compile Include="FStar.Error.fst" /> -->
    <!-- <Compile Include="FStar.BV.fst" /> -->
    <!-- <Compile Include="FStar.IndefiniteDescription.fst" /> -->
    <!-- <Compile Include="legacy/FStar.WellFounded.fst" /> -->
    <!-- <Compile Include="FStar.Axiomatic.Array.fst" /> -->
    <!-- <Compile Include="FStar.Relational.State.fst" /> -->
    <!-- <Compile Include="FStar.Fin.fst" /> -->
    <!-- <Compile Include="FStar.SquashProperties.fst" /> -->
    <!-- <Compile Include="FStar.ReflexiveTransitiveClosure.fst" /> -->
    <!-- <Compile Include="FStar.MRef.fst" /> -->
    <!-- <Compile Include="FStar.TwoLevelHeap.fst" /> -->
    <!-- <Compile Include="FStar.Math.Fermat.fst" /> -->
    <!-- <Compile Include="LowStar.ImmutableBuffer.fst" /> -->
    <!-- <Compile Include="LowStar.ConstBuffer.fst" /> -->
    <!-- <Compile Include="FStar.Int.Cast.Full.fst" /> -->
    <!-- <Compile Include="FStar.ConstantTime.Integers.fst" /> -->
    <!-- <Compile Include="legacy/FStar.Array.fst" /> -->
    <!-- <Compile Include="FStar.BV.fsti" /> -->
    <!-- <Compile Include="FStar.BaseTypes.fsti" /> -->
    <Compile Include="FStar.BigOps.fsti" />
    <!-- <Compile Include="FStar.Bytes.fsti" /> -->
    <Compile Include="FStar.Char.fsti" />
    <Compile Include="FStar.Classical.fsti" />
    <!-- <Compile Include="FStar.Date.fsti" /> -->
    <!-- <Compile Include="FStar.DependentMap.fsti" /> -->
    <Compile Include="FStar.Dyn.fsti" />
    <!-- <Compile Include="FStar.Endianness.fsti" /> -->
    <Compile Include="FStar.Float.fsti" />
    <Compile Include="FStar.FunctionalExtensionality.fsti" />
    <!-- <Compile Include="FStar.GSet.fsti" /> -->
    <Compile Include="FStar.Ghost.fsti" />
    <Compile Include="FStar.HyperStack.ST.fsti" />
    <!-- <Compile Include="FStar.IFC.fsti" /> -->
    <Compile Include="FStar.Int.fsti" />
    <Compile Include="FStar.Int128.fsti" />
    <Compile Include="FStar.Int16.fsti" />
    <Compile Include="FStar.Int32.fsti" />
    <Compile Include="FStar.Int64.fsti" />
    <Compile Include="FStar.Int8.fsti" />
    <!-- <Compile Include="FStar.MRef.fsti" /> -->
    <Compile Include="FStar.Map.fsti" />  <!-- TODO: Doesn't work with current implementation of Set (see TODO note on Set) -->
    <!-- <Compile Include="FStar.Math.Euclid.fsti" /> -->
    <!-- <Compile Include="FStar.Math.Fermat.fsti" /> -->
    <!-- <Compile Include="FStar.Modifies.fsti" /> -->
    <!-- <Compile Include="FStar.ModifiesGen.fsti" /> -->
    <!-- <Compile Include="FStar.Monotonic.DependentMap.fsti" /> -->
    <Compile Include="FStar.Monotonic.Heap.fsti" />
     <Compile Include="FStar.Monotonic.HyperHeap.fsti" />
    <Compile Include="FStar.Monotonic.HyperStack.fsti" />
    <Compile Include="FStar.Monotonic.Witnessed.fsti" />
    <Compile Include="FStar.Pervasives.fsti" />
    <Compile Include="FStar.Range.fsti" />
    <!-- <Compile Include="FStar.Real.fsti" /> -->
    <!-- <Compile Include="FStar.Reflection.Types.fsti" /> -->
    <!-- <Compile Include="FStar.ReflexiveTransitiveClosure.fsti" /> -->
    <Compile Include="FStar.Seq.Base.fsti" />
    <Compile Include="FStar.Seq.Properties.fsti" />
    <Compile Include="FStar.Set.fsti" />
    <Compile Include="FStar.Squash.fsti" />
    <Compile Include="FStar.String.fsti" />
    <Compile Include="FStar.TSet.fsti" />
    <!-- <Compile Include="FStar.Tactics.Effect.fsti" /> -->
    <!-- <Compile Include="FStar.Tactics.Types.fsti" /> -->
    <!-- <Compile Include="FStar.Tcp.fsti" /> -->
    <Compile Include="FStar.UInt.fsti" />
    <Compile Include="FStar.UInt128.fsti" />
    <Compile Include="FStar.UInt16.fsti" />
    <Compile Include="FStar.UInt32.fsti" />
    <Compile Include="FStar.UInt64.fsti" />
    <Compile Include="FStar.UInt8.fsti" />
    <!-- <Compile Include="FStar.Udp.fsti" /> -->
    <!-- <Compile Include="FStar.Universe.fsti" /> -->
    <Compile Include="FStar.Vector.Base.fsti" />
    <!-- <Compile Include="LowStar.BufferView.Down.fsti" /> -->
    <!-- <Compile Include="LowStar.BufferView.Up.fsti" /> -->
    <!-- <Compile Include="LowStar.BufferView.fsti" /> -->
    <!-- <Compile Include="LowStar.Comment.fsti" /> -->
    <!-- <Compile Include="LowStar.ConstBuffer.fsti" /> -->
    <!-- <Compile Include="LowStar.Failure.fsti" /> -->
    <!-- <Compile Include="LowStar.Literal.fsti" /> -->
    <!-- <Compile Include="LowStar.Monotonic.Buffer.fsti" /> -->
    <!-- <Compile Include="LowStar.PrefixFreezableBuffer.fsti" /> -->
    <!-- <Compile Include="experimental/FStar.ConstantTime.Integers.fsti" /> -->
    <!-- <Compile Include="experimental/FStar.OrdMap.fsti" /> -->
    <!-- <Compile Include="experimental/FStar.OrdSet.fsti" /> -->
    <!-- <Compile Include="experimental/FStar.Unsound.UniverseLowering.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Array.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Matrix2.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Pointer.Base.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Pointer.Derived1.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Pointer.Derived2.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.Pointer.Derived3.fsti" /> -->
    <!-- <Compile Include="legacy/FStar.TaggedUnion.fsti" /> -->
  </ItemGroup>
  <ItemGroup>
    <Reference Include="FSharp.Core">
      <HintPath>..\src\VS\packages\FSharp.Core.4.3.4\lib\net45\FSharp.Core.dll</HintPath>
    </Reference>
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
