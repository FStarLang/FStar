module Negotiation.Writers.NoHoare.Aux2
include Negotiation.Writers.Aux2

(* TODO: all of these, along with their implementations in the .fst, should be automatically generated by QuackyDucky *)

module LWP = LowParseWriters.Parsers
module LWPS = LowParseWriters.NoHoare.Parsers

inline_for_extraction
noextract
let constr_clientHelloExtension_CHE_pre_shared_key
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.ClientHelloExtension.lwp_clientHelloExtension_CHE_pre_shared_key inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ClientHelloExtension.lwp_clientHelloExtension
    inv
= 
  LWPS.twrite_of_ewrite (fun _ -> constr_clientHelloExtension_CHE_pre_shared_key' (fun _ -> LWPS.ewrite_of_twrite f))

inline_for_extraction
noextract
let constr_clientHelloExtension_CHE_psk_key_exchange_modes
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.ClientHelloExtension.lwp_clientHelloExtension_CHE_psk_key_exchange_modes inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ClientHelloExtension.lwp_clientHelloExtension
    inv
=
  LWPS.twrite_of_ewrite (fun _ -> constr_clientHelloExtension_CHE_psk_key_exchange_modes' (fun _ -> LWPS.ewrite_of_twrite f))

inline_for_extraction
noextract
let constr_clientHelloExtension_CHE_early_data
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.ClientHelloExtension.lwp_clientHelloExtension_CHE_early_data inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ClientHelloExtension.lwp_clientHelloExtension
    inv
= LWPS.twrite_of_ewrite (fun _ -> constr_clientHelloExtension_CHE_early_data' (fun _ -> LWPS.ewrite_of_twrite f))

inline_for_extraction
noextract
let constr_clientHelloExtension_CHE_key_share
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.ClientHelloExtension.lwp_clientHelloExtension_CHE_key_share inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ClientHelloExtension.lwp_clientHelloExtension
    inv
= LWPS.twrite_of_ewrite (fun _ -> constr_clientHelloExtension_CHE_key_share' (fun _ -> LWPS.ewrite_of_twrite f))

inline_for_extraction
noextract
let constr_clientHelloExtension_CHE_server_name
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.ClientHelloExtension.lwp_clientHelloExtension_CHE_server_name inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ClientHelloExtension.lwp_clientHelloExtension
    inv
= LWPS.twrite_of_ewrite (fun _ -> constr_clientHelloExtension_CHE_server_name' (fun _ -> LWPS.ewrite_of_twrite f))
