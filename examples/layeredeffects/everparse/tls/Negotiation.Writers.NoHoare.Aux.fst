module Negotiation.Writers.NoHoare.Aux
include Negotiation.Writers.Aux

(* TODO: all of these, along with their implementations in the .fst, should be automatically generated by QuackyDucky *)

module LWP = LowParseWriters.Parsers
module LWPS = LowParseWriters.NoHoare.Parsers

let valid_pskBinderEntry_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_pskBinderEntry_intro

let valid_pskIdentity_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_pskIdentity_intro

let valid_offeredPsks_binders_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_offeredPsks_binders_intro

let valid_offeredPsks_identities_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_offeredPsks_identities_intro

let valid_offeredPsks_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_offeredPsks_intro

let valid_preSharedKeyClientExtension_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_preSharedKeyClientExtension_intro

let valid_clientHelloExtension_CHE_pre_shared_key_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_clientHelloExtension_CHE_pre_shared_key_intro

let valid_rewrite_pskKeyExchangeModes_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_rewrite_pskKeyExchangeModes_intro

let valid_clientHelloExtension_CHE_psk_key_exchange_modes_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_clientHelloExtension_CHE_psk_key_exchange_modes_intro

let valid_clientHelloExtension_CHE_early_data_intro' =
  LWPS.tvalid_rewrite_of_evalid_rewrite valid_clientHelloExtension_CHE_early_data_intro

inline_for_extraction
noextract
let constr_sni_host_name
  #inv
  (f: (unit -> LWPS.TWrite unit LWP.parse_empty Parsers.HostName.lwp_hostName inv))
: LWPS.TWrite
    unit
    LWP.parse_empty
    Parsers.ServerName.lwp_serverName
    inv
= LWPS.twrite_of_ewrite (fun _ -> constr_sni_host_name (fun _ -> LWPS.ewrite_of_twrite f))
