1. Extract the tactic:
    fstar --codegen OCaml UserPrintTactic.fst
    (Note: this will overwrite UserPrintTactic.ml, which currently also contains the manual invocation
     needed to register the native tactic [see next step])

2. In UserPrintTactic.ml, manually modify the invocation to Tactics.Native.register_tactic to:
let _ = FStar_Tactics_Native.register_tactic "UserPrintTactic.__user_print" 2
    (fun ps args ->
        FStar_Tactics_Interpreter.mk_tactic_interpretation_1
            ps
            (FStar_Tactics_Native.from_tactic_1 user_print)
            FStar_Reflection_Basic.unembed_string
            FStar_Reflection_Basic.embed_unit
            FStar_TypeChecker_Common.t_unit
            (FStar_Ident.lid_of_str "UserPrintTactic.__user_print")
            args)

3. Compile the extracted tactic. At the root:
    ocamlfind ocamlopt -shared -I src/ocaml-output/_build/src/tactics/ml -I src/ocaml-output/_build/ulib/ml -I src/ocaml-output/_build/src/ocaml-output/ -linkpkg -package zarith -o examples/native_tactics/UserPrintTactic.cmxs examples/native_tactics/UserPrintTactic.ml
which results in UserPrintTactic.cmxs

In order to use it:
fstar --load UserPrintTactic.cmxs UserTacTest.fst