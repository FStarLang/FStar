FSTAR_HOME=../..
FSTAR=$(FSTAR_HOME)/bin/fstar.exe $(OTHERFLAGS)
FSTARTACLIB=$(FSTAR_HOME)/bin/fstar-tactics-lib/fstartaclib.cmxs

.SECONDARY:
.PRECIOUS:

all: prep
	+$(MAKE) -f Makefile.bench go

TESTS=\
	Bench.Fun.Norm.Lazy.Size6.Interpret.run\
	Bench.Fun.NBE.Lazy.Size6.Interpret.run\
	Bench.Fun.Norm.Lazy.Size6.Load.run\
	Bench.Fun.NBE.Lazy.Size6.Load.run\
	Bench.List.Norm.Lazy.Size6.Load.run\
	Bench.List.NBE.Lazy.Size6.Load.run\
	Bench.Fun.Norm.Lazy.Size7.Interpret.run\
	Bench.Fun.NBE.Lazy.Size7.Interpret.run\
	Bench.Fun.Norm.Lazy.Size7.Load.run\
	Bench.Fun.NBE.Lazy.Size7.Load.run\
	Bench.List.Norm.Lazy.Size7.Load.run\
	Bench.List.NBE.Lazy.Size7.Load.run\
	Bench.Fun.Norm.Lazy.Size8.Interpret.run\
	Bench.Fun.NBE.Lazy.Size8.Interpret.run\
	Bench.Fun.Norm.Lazy.Size8.Load.run\
	Bench.Fun.NBE.Lazy.Size8.Load.run\
	Bench.List.Norm.Lazy.Size8.Load.run\
	Bench.List.NBE.Lazy.Size8.Load.run\
	Bench.Fun.Norm.Lazy.Size9.Interpret.run\
	Bench.Fun.NBE.Lazy.Size9.Interpret.run\
	Bench.Fun.Norm.Lazy.Size9.Load.run\
	Bench.Fun.NBE.Lazy.Size9.Load.run\
	Bench.List.Norm.Lazy.Size9.Load.run\
	Bench.List.NBE.Lazy.Size9.Load.run\
	Bench.List.Norm.Lazy.Size6.Interpret.run\
	Bench.List.NBE.Lazy.Size6.Interpret.run\
	""

"":

# Way too much RAM:
	# Bench.List.Norm.Lazy.Size8.run\
	# Bench.List.NBE.Lazy.Size8.run\

__go: $(TESTS)
go:
	+$(MAKE) -f Makefile.bench __go 2>&1 | tee LOG
	echo "----------- SUMMARY -----------"
	grep '^Checked' LOG

    #            $(addprefix List.Driver,    .native .native_eager) \
    # $(addprefix List.DriverNBE, .native .native_eager) \
    # $(addprefix Fun.Driver,     .native) \
    # $(addprefix Fun.DriverNBE,  .native)
# These are very slow, but should still be benchmarked
# -- List.Driver.basic, Fun.Driver.basic

# This is also very slow (or maybe looping ... I may have broken NBE somehow)
# -- List.DriverNBE.basic
# -- Fun.DriverNBE.basic

# These don't work yet (I implemented support for it, but have not yet
# been able to get it working)
# Function-returning plugins with NBE: Fun.DriverNBE.native

# And these configurations don't make sense. They amount to eagerly
# embedding functions back, in which case native is useless
#  Fun.Driver.native_eager
#  Fun.DriverNBE.native_eager

prep: $(addsuffix .fst.checked , Registers.List Registers.Fun Imp.List Imp.Fun) \
      $(addsuffix .ml          , Registers.List Registers.Fun Imp.List Imp.Fun) \

%.fst.checked: %.fst
	$(FSTAR) $*.fst --cache_checked_modules

%.ml: %.fst.checked
	$(FSTAR) $*.fst --codegen Plugin --extract $*
	touch $@

%.Load.run: %.Load.fst
	$(FSTAR) $< --load Registers.List --load Registers.Fun  --warn_error -266 | grep Checked

%.Interpret.run: %.Interpret.fst
	$(FSTAR) $< --warn_error -266 | grep Checked

Bench.%.fst: ./makeimp.sh
	./makeimp.sh $@

clean:
	rm -f Registers_List.ml Registers.List.ml Registers_List.cmxs
	rm -f Registers_Fun.ml Registers.Fun.ml Registers_Fun.cmxs
	rm -f *.checked
