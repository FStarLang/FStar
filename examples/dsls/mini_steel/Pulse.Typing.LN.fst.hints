[
  "%Ш\u007fы[а\u0000сHпе\n>E\u0005Р",
  [
    [
      "Pulse.Typing.LN.open_term_ln'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_0",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Arrow",
        "constructor_distinct_Pulse.Syntax.Tm_BVar",
        "constructor_distinct_Pulse.Syntax.Tm_Constant",
        "constructor_distinct_Pulse.Syntax.Tm_Emp",
        "constructor_distinct_Pulse.Syntax.Tm_EmpInames",
        "constructor_distinct_Pulse.Syntax.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Tm_FVar",
        "constructor_distinct_Pulse.Syntax.Tm_ForallSL",
        "constructor_distinct_Pulse.Syntax.Tm_Inames",
        "constructor_distinct_Pulse.Syntax.Tm_Let",
        "constructor_distinct_Pulse.Syntax.Tm_Pure",
        "constructor_distinct_Pulse.Syntax.Tm_PureApp",
        "constructor_distinct_Pulse.Syntax.Tm_Refine",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "constructor_distinct_Pulse.Syntax.Tm_Type",
        "constructor_distinct_Pulse.Syntax.Tm_UInst",
        "constructor_distinct_Pulse.Syntax.Tm_UVar",
        "constructor_distinct_Pulse.Syntax.Tm_Unknown",
        "constructor_distinct_Pulse.Syntax.Tm_VProp",
        "constructor_distinct_Pulse.Syntax.Tm_Var",
        "disc_equation_Pulse.Syntax.Tm_Arrow",
        "disc_equation_Pulse.Syntax.Tm_BVar",
        "disc_equation_Pulse.Syntax.Tm_Constant",
        "disc_equation_Pulse.Syntax.Tm_Emp",
        "disc_equation_Pulse.Syntax.Tm_EmpInames",
        "disc_equation_Pulse.Syntax.Tm_ExistsSL",
        "disc_equation_Pulse.Syntax.Tm_FVar",
        "disc_equation_Pulse.Syntax.Tm_ForallSL",
        "disc_equation_Pulse.Syntax.Tm_Inames",
        "disc_equation_Pulse.Syntax.Tm_Let",
        "disc_equation_Pulse.Syntax.Tm_Pure",
        "disc_equation_Pulse.Syntax.Tm_PureApp",
        "disc_equation_Pulse.Syntax.Tm_Refine",
        "disc_equation_Pulse.Syntax.Tm_Star",
        "disc_equation_Pulse.Syntax.Tm_Type",
        "disc_equation_Pulse.Syntax.Tm_UInst",
        "disc_equation_Pulse.Syntax.Tm_UVar",
        "disc_equation_Pulse.Syntax.Tm_Unknown",
        "disc_equation_Pulse.Syntax.Tm_VProp",
        "disc_equation_Pulse.Syntax.Tm_Var",
        "equality_tok_Pulse.Syntax.Tm_Emp@tok",
        "equality_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "equality_tok_Pulse.Syntax.Tm_Inames@tok",
        "equality_tok_Pulse.Syntax.Tm_Unknown@tok",
        "equality_tok_Pulse.Syntax.Tm_VProp@tok", "equation_Prims.nat",
        "equation_Pulse.Syntax.index",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_term_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.binder",
        "fuel_guarded_inversion_Pulse.Syntax.term", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "proj_equation_Pulse.Syntax.Mkbv_bv_index",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_b",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_body",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_q",
        "projection_inverse_Pulse.Syntax.Tm_BVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Constant_c",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_should_elim",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_u",
        "projection_inverse_Pulse.Syntax.Tm_FVar_l",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_u",
        "projection_inverse_Pulse.Syntax.Tm_Let_e1",
        "projection_inverse_Pulse.Syntax.Tm_Let_e2",
        "projection_inverse_Pulse.Syntax.Tm_Let_t",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Pure_p",
        "projection_inverse_Pulse.Syntax.Tm_Refine__1",
        "projection_inverse_Pulse.Syntax.Tm_Refine_b",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "projection_inverse_Pulse.Syntax.Tm_Type__0",
        "projection_inverse_Pulse.Syntax.Tm_UInst_l",
        "projection_inverse_Pulse.Syntax.Tm_UInst_us",
        "projection_inverse_Pulse.Syntax.Tm_UVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "subterm_ordering_Pulse.Syntax.Mkbinder",
        "subterm_ordering_Pulse.Syntax.Tm_Arrow",
        "subterm_ordering_Pulse.Syntax.Tm_ExistsSL",
        "subterm_ordering_Pulse.Syntax.Tm_ForallSL",
        "subterm_ordering_Pulse.Syntax.Tm_Let",
        "subterm_ordering_Pulse.Syntax.Tm_Pure",
        "subterm_ordering_Pulse.Syntax.Tm_PureApp",
        "subterm_ordering_Pulse.Syntax.Tm_Refine",
        "subterm_ordering_Pulse.Syntax.Tm_Star",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_comp_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.uu___is_Tm_BVar",
        "typing_tok_Pulse.Syntax.Tm_Emp@tok"
      ],
      0,
      "dccd09dc1fd42120eb1b0f480714cf67"
    ],
    [
      "Pulse.Typing.LN.open_term_ln'",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_11af3804211c949491be1003e48ef637_0",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "constructor_distinct_Pulse.Syntax.C_Tot",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot", "equation_Prims.nat",
        "equation_Pulse.Syntax.index",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_comp_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_st_comp_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.C_Tot__0",
        "projection_inverse_Pulse.Syntax.Mkst_comp_post",
        "projection_inverse_Pulse.Syntax.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Mkst_comp_res",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "subterm_ordering_Pulse.Syntax.C_ST",
        "subterm_ordering_Pulse.Syntax.C_STAtomic",
        "subterm_ordering_Pulse.Syntax.C_STGhost",
        "subterm_ordering_Pulse.Syntax.C_Tot",
        "subterm_ordering_Pulse.Syntax.Mkst_comp",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_st_comp_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.open_comp_", "typing_Pulse.Syntax.uu___is_C_Tot"
      ],
      0,
      "de3d5bdb2a5703695b723dda88df2196"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_opt'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.open_term_opt_", "int_inversion",
        "int_typing", "kinding_Pulse.Syntax.term@tok",
        "lemma_FStar.Pervasives.invertOption",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "typing_Pulse.Syntax.ln_opt_", "typing_Pulse.Syntax.open_term_opt_"
      ],
      0,
      "f485a22d1476a89be0f670003304d73e"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_list'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "@query", "Prims_pretyping_3862c4e8ff39bfc3871b6a47e7ff5b2e",
        "Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "binder_x_194ca042d8709e0e0ef243686ac7a8f1_0",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Prims.list", "constructor_distinct_Prims.unit",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Prims.nat", "equation_Pulse.Syntax.index",
        "equation_with_fuel_Pulse.Syntax.ln_list_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "int_inversion", "int_typing", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "string_typing", "subterm_ordering_Prims.Cons",
        "token_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_",
        "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.open_term_list_", "unit_typing"
      ],
      0,
      "3a0e18619aa3223f4a99743c8284e089"
    ],
    [
      "Pulse.Typing.LN.open_st_term_ln'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_e80a7984709b7e5db0aad12cc865623d",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_1",
        "binder_x_e80a7984709b7e5db0aad12cc865623d_0",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Abs",
        "constructor_distinct_Pulse.Syntax.Tm_Admit",
        "constructor_distinct_Pulse.Syntax.Tm_Bind",
        "constructor_distinct_Pulse.Syntax.Tm_ElimExists",
        "constructor_distinct_Pulse.Syntax.Tm_If",
        "constructor_distinct_Pulse.Syntax.Tm_IntroExists",
        "constructor_distinct_Pulse.Syntax.Tm_Par",
        "constructor_distinct_Pulse.Syntax.Tm_Protect",
        "constructor_distinct_Pulse.Syntax.Tm_Return",
        "constructor_distinct_Pulse.Syntax.Tm_Rewrite",
        "constructor_distinct_Pulse.Syntax.Tm_STApp",
        "constructor_distinct_Pulse.Syntax.Tm_While",
        "disc_equation_Pulse.Syntax.Tm_Abs",
        "disc_equation_Pulse.Syntax.Tm_Admit",
        "disc_equation_Pulse.Syntax.Tm_Bind",
        "disc_equation_Pulse.Syntax.Tm_ElimExists",
        "disc_equation_Pulse.Syntax.Tm_If",
        "disc_equation_Pulse.Syntax.Tm_IntroExists",
        "disc_equation_Pulse.Syntax.Tm_Par",
        "disc_equation_Pulse.Syntax.Tm_Protect",
        "disc_equation_Pulse.Syntax.Tm_Return",
        "disc_equation_Pulse.Syntax.Tm_Rewrite",
        "disc_equation_Pulse.Syntax.Tm_STApp",
        "disc_equation_Pulse.Syntax.Tm_While", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.vprop",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.st_term", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Tm_Abs_b",
        "projection_inverse_Pulse.Syntax.Tm_Abs_body",
        "projection_inverse_Pulse.Syntax.Tm_Abs_post",
        "projection_inverse_Pulse.Syntax.Tm_Abs_pre",
        "projection_inverse_Pulse.Syntax.Tm_Abs_q",
        "projection_inverse_Pulse.Syntax.Tm_Admit__0",
        "projection_inverse_Pulse.Syntax.Tm_Admit__1",
        "projection_inverse_Pulse.Syntax.Tm_Admit__2",
        "projection_inverse_Pulse.Syntax.Tm_Admit__3",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e1",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e2",
        "projection_inverse_Pulse.Syntax.Tm_ElimExists__0",
        "projection_inverse_Pulse.Syntax.Tm_If_b",
        "projection_inverse_Pulse.Syntax.Tm_If_else_",
        "projection_inverse_Pulse.Syntax.Tm_If_post",
        "projection_inverse_Pulse.Syntax.Tm_If_then_",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists__1",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_erased",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_witnesses",
        "projection_inverse_Pulse.Syntax.Tm_Par__0",
        "projection_inverse_Pulse.Syntax.Tm_Par__1",
        "projection_inverse_Pulse.Syntax.Tm_Par__2",
        "projection_inverse_Pulse.Syntax.Tm_Par__3",
        "projection_inverse_Pulse.Syntax.Tm_Par__4",
        "projection_inverse_Pulse.Syntax.Tm_Par__5",
        "projection_inverse_Pulse.Syntax.Tm_Protect__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__1",
        "projection_inverse_Pulse.Syntax.Tm_Return__2",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__0",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__1",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_STApp_head",
        "projection_inverse_Pulse.Syntax.Tm_While__0",
        "projection_inverse_Pulse.Syntax.Tm_While__1",
        "projection_inverse_Pulse.Syntax.Tm_While__2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_83fa3691bd889b255ebd44c64b740f93",
        "subterm_ordering_Pulse.Syntax.Tm_Abs",
        "subterm_ordering_Pulse.Syntax.Tm_Bind",
        "subterm_ordering_Pulse.Syntax.Tm_If",
        "subterm_ordering_Pulse.Syntax.Tm_Par",
        "subterm_ordering_Pulse.Syntax.Tm_Protect",
        "subterm_ordering_Pulse.Syntax.Tm_While",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_",
        "typing_Pulse.Syntax.ln_opt_", "typing_Pulse.Syntax.ln_st_",
        "typing_Pulse.Syntax.open_st_term_",
        "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.open_term_list_",
        "typing_Pulse.Syntax.open_term_opt_",
        "typing_Pulse.Syntax.uu___is_Tm_Return"
      ],
      0,
      "5669e61e59b8ac1ebb58b7d393ae6ddc"
    ],
    [
      "Pulse.Typing.LN.open_term_ln",
      1,
      2,
      1,
      [
        "@query", "equation_Pulse.Syntax.ln",
        "equation_Pulse.Syntax.open_term",
        "equation_Pulse.Syntax.term_of_var"
      ],
      0,
      "23ea0c878bccbbfb4f730f0a2f6ff738"
    ],
    [
      "Pulse.Typing.LN.open_st_term_ln",
      1,
      2,
      1,
      [
        "@query", "equation_Pulse.Syntax.ln_st",
        "equation_Pulse.Syntax.open_st_term",
        "equation_Pulse.Syntax.term_of_var"
      ],
      0,
      "bb2a104eb5db627003b4ade63139d7c0"
    ],
    [
      "Pulse.Typing.LN.ln_weakening",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_c_.fuel_instrumented", "@query",
        "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_0",
        "binder_x_ae567c2fb75be05905677af440075565_1",
        "binder_x_ae567c2fb75be05905677af440075565_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Arrow",
        "constructor_distinct_Pulse.Syntax.Tm_BVar",
        "constructor_distinct_Pulse.Syntax.Tm_Constant",
        "constructor_distinct_Pulse.Syntax.Tm_Emp",
        "constructor_distinct_Pulse.Syntax.Tm_EmpInames",
        "constructor_distinct_Pulse.Syntax.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Tm_FVar",
        "constructor_distinct_Pulse.Syntax.Tm_ForallSL",
        "constructor_distinct_Pulse.Syntax.Tm_Inames",
        "constructor_distinct_Pulse.Syntax.Tm_Let",
        "constructor_distinct_Pulse.Syntax.Tm_Pure",
        "constructor_distinct_Pulse.Syntax.Tm_PureApp",
        "constructor_distinct_Pulse.Syntax.Tm_Refine",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "constructor_distinct_Pulse.Syntax.Tm_Type",
        "constructor_distinct_Pulse.Syntax.Tm_UInst",
        "constructor_distinct_Pulse.Syntax.Tm_UVar",
        "constructor_distinct_Pulse.Syntax.Tm_Unknown",
        "constructor_distinct_Pulse.Syntax.Tm_VProp",
        "constructor_distinct_Pulse.Syntax.Tm_Var",
        "disc_equation_Pulse.Syntax.Tm_Arrow",
        "disc_equation_Pulse.Syntax.Tm_BVar",
        "disc_equation_Pulse.Syntax.Tm_Constant",
        "disc_equation_Pulse.Syntax.Tm_Emp",
        "disc_equation_Pulse.Syntax.Tm_EmpInames",
        "disc_equation_Pulse.Syntax.Tm_ExistsSL",
        "disc_equation_Pulse.Syntax.Tm_FVar",
        "disc_equation_Pulse.Syntax.Tm_ForallSL",
        "disc_equation_Pulse.Syntax.Tm_Inames",
        "disc_equation_Pulse.Syntax.Tm_Let",
        "disc_equation_Pulse.Syntax.Tm_Pure",
        "disc_equation_Pulse.Syntax.Tm_PureApp",
        "disc_equation_Pulse.Syntax.Tm_Refine",
        "disc_equation_Pulse.Syntax.Tm_Star",
        "disc_equation_Pulse.Syntax.Tm_Type",
        "disc_equation_Pulse.Syntax.Tm_UInst",
        "disc_equation_Pulse.Syntax.Tm_UVar",
        "disc_equation_Pulse.Syntax.Tm_Unknown",
        "disc_equation_Pulse.Syntax.Tm_VProp",
        "disc_equation_Pulse.Syntax.Tm_Var",
        "equality_tok_Pulse.Syntax.Tm_Emp@tok",
        "equality_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "equality_tok_Pulse.Syntax.Tm_Inames@tok",
        "equality_tok_Pulse.Syntax.Tm_Unknown@tok",
        "equality_tok_Pulse.Syntax.Tm_VProp@tok",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.binder",
        "fuel_guarded_inversion_Pulse.Syntax.term", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_b",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_body",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_q",
        "projection_inverse_Pulse.Syntax.Tm_BVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Constant_c",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_should_elim",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_u",
        "projection_inverse_Pulse.Syntax.Tm_FVar_l",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_u",
        "projection_inverse_Pulse.Syntax.Tm_Let_e1",
        "projection_inverse_Pulse.Syntax.Tm_Let_e2",
        "projection_inverse_Pulse.Syntax.Tm_Let_t",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Pure_p",
        "projection_inverse_Pulse.Syntax.Tm_Refine__1",
        "projection_inverse_Pulse.Syntax.Tm_Refine_b",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "projection_inverse_Pulse.Syntax.Tm_Type__0",
        "projection_inverse_Pulse.Syntax.Tm_UInst_l",
        "projection_inverse_Pulse.Syntax.Tm_UInst_us",
        "projection_inverse_Pulse.Syntax.Tm_UVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "refinement_interpretation_Tm_refine_b26b1f0bed19c810de070fb5ed5e1f4a",
        "refinement_interpretation_Tm_refine_c70536d9500436ce959ac3ffa3d37f6e",
        "subterm_ordering_Pulse.Syntax.Mkbinder",
        "subterm_ordering_Pulse.Syntax.Tm_Arrow",
        "subterm_ordering_Pulse.Syntax.Tm_ExistsSL",
        "subterm_ordering_Pulse.Syntax.Tm_ForallSL",
        "subterm_ordering_Pulse.Syntax.Tm_Let",
        "subterm_ordering_Pulse.Syntax.Tm_Pure",
        "subterm_ordering_Pulse.Syntax.Tm_PureApp",
        "subterm_ordering_Pulse.Syntax.Tm_Refine",
        "subterm_ordering_Pulse.Syntax.Tm_Star",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.uu___is_Tm_BVar",
        "typing_tok_Pulse.Syntax.Tm_Emp@tok",
        "typing_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "typing_tok_Pulse.Syntax.Tm_Inames@tok",
        "typing_tok_Pulse.Syntax.Tm_Unknown@tok",
        "typing_tok_Pulse.Syntax.Tm_VProp@tok"
      ],
      0,
      "8d4697df83fb472a11e5d08013b32580"
    ],
    [
      "Pulse.Typing.LN.ln_weakening",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_11af3804211c949491be1003e48ef637_0",
        "binder_x_ae567c2fb75be05905677af440075565_1",
        "binder_x_ae567c2fb75be05905677af440075565_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "constructor_distinct_Pulse.Syntax.C_Tot",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.C_Tot__0",
        "refinement_interpretation_Tm_refine_d648f12b6f57e8fce8b1f100e6de8cde",
        "subterm_ordering_Pulse.Syntax.C_ST",
        "subterm_ordering_Pulse.Syntax.C_STAtomic",
        "subterm_ordering_Pulse.Syntax.C_STGhost",
        "subterm_ordering_Pulse.Syntax.C_Tot",
        "subterm_ordering_Pulse.Syntax.Mkst_comp",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.uu___is_C_Tot"
      ],
      0,
      "1ccbc1685d98c6ea4bd49e2962c870c3"
    ],
    [
      "Pulse.Typing.LN.ln_weakening_opt",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "equation_Pulse.Syntax.ln_opt_", "int_inversion",
        "kinding_Pulse.Syntax.term@tok",
        "lemma_FStar.Pervasives.invertOption",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "typing_Pulse.Syntax.ln_opt_"
      ],
      0,
      "0ff7a3938e350782104a4f72cdb5bffd"
    ],
    [
      "Pulse.Typing.LN.ln_weakening_list",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@query", "binder_x_194ca042d8709e0e0ef243686ac7a8f1_0",
        "binder_x_ae567c2fb75be05905677af440075565_1",
        "binder_x_ae567c2fb75be05905677af440075565_2", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Tm_unit", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil",
        "equation_with_fuel_Pulse.Syntax.ln_list_.fuel_instrumented",
        "int_inversion", "primitive_Prims.op_AmpAmp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_"
      ],
      0,
      "a57b3976b741dcd2cd91935299842200"
    ],
    [
      "Pulse.Typing.LN.ln_weakening_st",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_.fuel_instrumented", "@query",
        "Pulse.Syntax_pretyping_e80a7984709b7e5db0aad12cc865623d",
        "binder_x_ae567c2fb75be05905677af440075565_1",
        "binder_x_ae567c2fb75be05905677af440075565_2",
        "binder_x_e80a7984709b7e5db0aad12cc865623d_0", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Abs",
        "constructor_distinct_Pulse.Syntax.Tm_Admit",
        "constructor_distinct_Pulse.Syntax.Tm_Bind",
        "constructor_distinct_Pulse.Syntax.Tm_ElimExists",
        "constructor_distinct_Pulse.Syntax.Tm_If",
        "constructor_distinct_Pulse.Syntax.Tm_IntroExists",
        "constructor_distinct_Pulse.Syntax.Tm_Par",
        "constructor_distinct_Pulse.Syntax.Tm_Protect",
        "constructor_distinct_Pulse.Syntax.Tm_Return",
        "constructor_distinct_Pulse.Syntax.Tm_Rewrite",
        "constructor_distinct_Pulse.Syntax.Tm_STApp",
        "constructor_distinct_Pulse.Syntax.Tm_While",
        "disc_equation_Pulse.Syntax.Tm_Abs",
        "disc_equation_Pulse.Syntax.Tm_Admit",
        "disc_equation_Pulse.Syntax.Tm_Bind",
        "disc_equation_Pulse.Syntax.Tm_ElimExists",
        "disc_equation_Pulse.Syntax.Tm_If",
        "disc_equation_Pulse.Syntax.Tm_IntroExists",
        "disc_equation_Pulse.Syntax.Tm_Par",
        "disc_equation_Pulse.Syntax.Tm_Protect",
        "disc_equation_Pulse.Syntax.Tm_Return",
        "disc_equation_Pulse.Syntax.Tm_Rewrite",
        "disc_equation_Pulse.Syntax.Tm_STApp",
        "disc_equation_Pulse.Syntax.Tm_While",
        "equation_Pulse.Syntax.ln_opt_", "equation_Pulse.Syntax.vprop",
        "equation_with_fuel_Pulse.Syntax.ln_st_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.st_term", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Tm_Abs_b",
        "projection_inverse_Pulse.Syntax.Tm_Abs_body",
        "projection_inverse_Pulse.Syntax.Tm_Abs_post",
        "projection_inverse_Pulse.Syntax.Tm_Abs_pre",
        "projection_inverse_Pulse.Syntax.Tm_Abs_q",
        "projection_inverse_Pulse.Syntax.Tm_Admit__0",
        "projection_inverse_Pulse.Syntax.Tm_Admit__1",
        "projection_inverse_Pulse.Syntax.Tm_Admit__2",
        "projection_inverse_Pulse.Syntax.Tm_Admit__3",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e1",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e2",
        "projection_inverse_Pulse.Syntax.Tm_ElimExists__0",
        "projection_inverse_Pulse.Syntax.Tm_If_b",
        "projection_inverse_Pulse.Syntax.Tm_If_else_",
        "projection_inverse_Pulse.Syntax.Tm_If_post",
        "projection_inverse_Pulse.Syntax.Tm_If_then_",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists__1",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_erased",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_witnesses",
        "projection_inverse_Pulse.Syntax.Tm_Par__0",
        "projection_inverse_Pulse.Syntax.Tm_Par__1",
        "projection_inverse_Pulse.Syntax.Tm_Par__2",
        "projection_inverse_Pulse.Syntax.Tm_Par__3",
        "projection_inverse_Pulse.Syntax.Tm_Par__4",
        "projection_inverse_Pulse.Syntax.Tm_Par__5",
        "projection_inverse_Pulse.Syntax.Tm_Protect__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__1",
        "projection_inverse_Pulse.Syntax.Tm_Return__2",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__0",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__1",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_STApp_head",
        "projection_inverse_Pulse.Syntax.Tm_While__0",
        "projection_inverse_Pulse.Syntax.Tm_While__1",
        "projection_inverse_Pulse.Syntax.Tm_While__2",
        "refinement_interpretation_Tm_refine_513d0a8963dc7bf8c80551b6e088be2b",
        "subterm_ordering_Pulse.Syntax.Tm_Abs",
        "subterm_ordering_Pulse.Syntax.Tm_Bind",
        "subterm_ordering_Pulse.Syntax.Tm_If",
        "subterm_ordering_Pulse.Syntax.Tm_Par",
        "subterm_ordering_Pulse.Syntax.Tm_Protect",
        "subterm_ordering_Pulse.Syntax.Tm_While",
        "token_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_",
        "typing_Pulse.Syntax.ln_opt_", "typing_Pulse.Syntax.ln_st_",
        "typing_Pulse.Syntax.uu___is_Tm_Return"
      ],
      0,
      "54a00c341aa1892d7c298fd537469361"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_inv'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_0",
        "binder_x_d7ffd2ae3cf238833763850e66e66878_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Arrow",
        "constructor_distinct_Pulse.Syntax.Tm_BVar",
        "constructor_distinct_Pulse.Syntax.Tm_Constant",
        "constructor_distinct_Pulse.Syntax.Tm_Emp",
        "constructor_distinct_Pulse.Syntax.Tm_EmpInames",
        "constructor_distinct_Pulse.Syntax.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Tm_FVar",
        "constructor_distinct_Pulse.Syntax.Tm_ForallSL",
        "constructor_distinct_Pulse.Syntax.Tm_Inames",
        "constructor_distinct_Pulse.Syntax.Tm_Let",
        "constructor_distinct_Pulse.Syntax.Tm_Pure",
        "constructor_distinct_Pulse.Syntax.Tm_PureApp",
        "constructor_distinct_Pulse.Syntax.Tm_Refine",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "constructor_distinct_Pulse.Syntax.Tm_Type",
        "constructor_distinct_Pulse.Syntax.Tm_UInst",
        "constructor_distinct_Pulse.Syntax.Tm_UVar",
        "constructor_distinct_Pulse.Syntax.Tm_Unknown",
        "constructor_distinct_Pulse.Syntax.Tm_VProp",
        "constructor_distinct_Pulse.Syntax.Tm_Var",
        "data_elim_Pulse.Syntax.Mkbv", "disc_equation_Pulse.Syntax.Tm_Arrow",
        "disc_equation_Pulse.Syntax.Tm_BVar",
        "disc_equation_Pulse.Syntax.Tm_Constant",
        "disc_equation_Pulse.Syntax.Tm_Emp",
        "disc_equation_Pulse.Syntax.Tm_EmpInames",
        "disc_equation_Pulse.Syntax.Tm_ExistsSL",
        "disc_equation_Pulse.Syntax.Tm_FVar",
        "disc_equation_Pulse.Syntax.Tm_ForallSL",
        "disc_equation_Pulse.Syntax.Tm_Inames",
        "disc_equation_Pulse.Syntax.Tm_Let",
        "disc_equation_Pulse.Syntax.Tm_Pure",
        "disc_equation_Pulse.Syntax.Tm_PureApp",
        "disc_equation_Pulse.Syntax.Tm_Refine",
        "disc_equation_Pulse.Syntax.Tm_Star",
        "disc_equation_Pulse.Syntax.Tm_Type",
        "disc_equation_Pulse.Syntax.Tm_UInst",
        "disc_equation_Pulse.Syntax.Tm_UVar",
        "disc_equation_Pulse.Syntax.Tm_Unknown",
        "disc_equation_Pulse.Syntax.Tm_VProp",
        "disc_equation_Pulse.Syntax.Tm_Var",
        "equality_tok_Pulse.Syntax.Tm_Emp@tok",
        "equality_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "equality_tok_Pulse.Syntax.Tm_Inames@tok",
        "equality_tok_Pulse.Syntax.Tm_Unknown@tok",
        "equality_tok_Pulse.Syntax.Tm_VProp@tok", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_comp_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_term_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.binder",
        "fuel_guarded_inversion_Pulse.Syntax.bv",
        "fuel_guarded_inversion_Pulse.Syntax.term", "int_inversion",
        "int_typing", "lemma_Pulse.Typing.LN.ln_weakening",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "proj_equation_Pulse.Syntax.Mkbv_bv_index",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_b",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_body",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_q",
        "projection_inverse_Pulse.Syntax.Tm_BVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Constant_c",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_should_elim",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_u",
        "projection_inverse_Pulse.Syntax.Tm_FVar_l",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_u",
        "projection_inverse_Pulse.Syntax.Tm_Let_e1",
        "projection_inverse_Pulse.Syntax.Tm_Let_e2",
        "projection_inverse_Pulse.Syntax.Tm_Let_t",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Pure_p",
        "projection_inverse_Pulse.Syntax.Tm_Refine__1",
        "projection_inverse_Pulse.Syntax.Tm_Refine_b",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "projection_inverse_Pulse.Syntax.Tm_Type__0",
        "projection_inverse_Pulse.Syntax.Tm_UInst_l",
        "projection_inverse_Pulse.Syntax.Tm_UInst_us",
        "projection_inverse_Pulse.Syntax.Tm_UVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_949ffb6c837b8de2dc4f073575bc9a1c",
        "refinement_interpretation_Tm_refine_e2119ecb150b706220027d00d22dc8c7",
        "refinement_interpretation_Tm_refine_e9cb5aa39e46b3d7c83c85d8195cc487",
        "subterm_ordering_Pulse.Syntax.Mkbinder",
        "subterm_ordering_Pulse.Syntax.Tm_Arrow",
        "subterm_ordering_Pulse.Syntax.Tm_ExistsSL",
        "subterm_ordering_Pulse.Syntax.Tm_ForallSL",
        "subterm_ordering_Pulse.Syntax.Tm_Let",
        "subterm_ordering_Pulse.Syntax.Tm_Pure",
        "subterm_ordering_Pulse.Syntax.Tm_PureApp",
        "subterm_ordering_Pulse.Syntax.Tm_Refine",
        "subterm_ordering_Pulse.Syntax.Tm_Star",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.open_comp_", "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.uu___is_Tm_BVar",
        "typing_tok_Pulse.Syntax.Tm_Emp@tok",
        "typing_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "typing_tok_Pulse.Syntax.Tm_Inames@tok",
        "typing_tok_Pulse.Syntax.Tm_Unknown@tok",
        "typing_tok_Pulse.Syntax.Tm_VProp@tok"
      ],
      0,
      "7042427c0580d824023b52d9664a1151"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_inv'",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_11af3804211c949491be1003e48ef637_0",
        "binder_x_d7ffd2ae3cf238833763850e66e66878_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "constructor_distinct_Pulse.Syntax.C_Tot",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot", "equation_Prims.nat",
        "equation_Pulse.Syntax.index",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_comp_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_st_comp_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp", "int_inversion",
        "int_typing", "lemma_Pulse.Typing.LN.ln_weakening",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.C_Tot__0",
        "projection_inverse_Pulse.Syntax.Mkst_comp_post",
        "projection_inverse_Pulse.Syntax.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Mkst_comp_res",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_8bd4f4fa0a8c517969e21350a25eb572",
        "refinement_interpretation_Tm_refine_949ffb6c837b8de2dc4f073575bc9a1c",
        "subterm_ordering_Pulse.Syntax.C_ST",
        "subterm_ordering_Pulse.Syntax.C_STAtomic",
        "subterm_ordering_Pulse.Syntax.C_STGhost",
        "subterm_ordering_Pulse.Syntax.C_Tot",
        "subterm_ordering_Pulse.Syntax.Mkst_comp",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_st_comp_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.open_comp_", "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.uu___is_C_Tot"
      ],
      0,
      "7cd185cb2c1bc30d1d8fd189522c47d2"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_inv_opt'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@query", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln",
        "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.open_term_opt_", "int_inversion",
        "kinding_Pulse.Syntax.term@tok",
        "lemma_FStar.Pervasives.invertOption",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_949ffb6c837b8de2dc4f073575bc9a1c",
        "typing_Pulse.Syntax.ln", "typing_Pulse.Syntax.ln_opt_"
      ],
      0,
      "c96a7d2bf47f56c7cc470731646c6c1a"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_inv_list'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "@query", "Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed",
        "binder_x_194ca042d8709e0e0ef243686ac7a8f1_0",
        "binder_x_d7ffd2ae3cf238833763850e66e66878_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Tm_unit", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Prims.nat",
        "equation_Pulse.Syntax.index",
        "equation_with_fuel_Pulse.Syntax.ln_list_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "int_inversion", "int_typing", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_949ffb6c837b8de2dc4f073575bc9a1c",
        "string_typing", "subterm_ordering_Prims.Cons",
        "token_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_",
        "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.open_term_list_"
      ],
      0,
      "fb29de2f82ed03742e48827be5ec1004"
    ],
    [
      "Pulse.Typing.LN.open_term_ln_inv_st'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_e80a7984709b7e5db0aad12cc865623d",
        "binder_x_d7ffd2ae3cf238833763850e66e66878_1",
        "binder_x_e80a7984709b7e5db0aad12cc865623d_0",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Pulse.Syntax.Tm_Abs",
        "constructor_distinct_Pulse.Syntax.Tm_Admit",
        "constructor_distinct_Pulse.Syntax.Tm_Bind",
        "constructor_distinct_Pulse.Syntax.Tm_ElimExists",
        "constructor_distinct_Pulse.Syntax.Tm_If",
        "constructor_distinct_Pulse.Syntax.Tm_IntroExists",
        "constructor_distinct_Pulse.Syntax.Tm_Par",
        "constructor_distinct_Pulse.Syntax.Tm_Protect",
        "constructor_distinct_Pulse.Syntax.Tm_Return",
        "constructor_distinct_Pulse.Syntax.Tm_Rewrite",
        "constructor_distinct_Pulse.Syntax.Tm_STApp",
        "constructor_distinct_Pulse.Syntax.Tm_While",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_Pulse.Syntax.Tm_Abs",
        "disc_equation_Pulse.Syntax.Tm_Admit",
        "disc_equation_Pulse.Syntax.Tm_Bind",
        "disc_equation_Pulse.Syntax.Tm_ElimExists",
        "disc_equation_Pulse.Syntax.Tm_If",
        "disc_equation_Pulse.Syntax.Tm_IntroExists",
        "disc_equation_Pulse.Syntax.Tm_Par",
        "disc_equation_Pulse.Syntax.Tm_Protect",
        "disc_equation_Pulse.Syntax.Tm_Return",
        "disc_equation_Pulse.Syntax.Tm_Rewrite",
        "disc_equation_Pulse.Syntax.Tm_STApp",
        "disc_equation_Pulse.Syntax.Tm_While", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.open_term_opt_",
        "equation_Pulse.Syntax.vprop",
        "equation_with_fuel_Pulse.Syntax.ln_st_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_st_term_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.open_term_.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Pulse.Syntax.st_term", "int_inversion",
        "int_typing", "lemma_Pulse.Typing.LN.ln_weakening",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Tm_Abs_b",
        "projection_inverse_Pulse.Syntax.Tm_Abs_body",
        "projection_inverse_Pulse.Syntax.Tm_Abs_post",
        "projection_inverse_Pulse.Syntax.Tm_Abs_pre",
        "projection_inverse_Pulse.Syntax.Tm_Abs_q",
        "projection_inverse_Pulse.Syntax.Tm_Admit__0",
        "projection_inverse_Pulse.Syntax.Tm_Admit__1",
        "projection_inverse_Pulse.Syntax.Tm_Admit__2",
        "projection_inverse_Pulse.Syntax.Tm_Admit__3",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e1",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e2",
        "projection_inverse_Pulse.Syntax.Tm_ElimExists__0",
        "projection_inverse_Pulse.Syntax.Tm_If_b",
        "projection_inverse_Pulse.Syntax.Tm_If_else_",
        "projection_inverse_Pulse.Syntax.Tm_If_post",
        "projection_inverse_Pulse.Syntax.Tm_If_then_",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists__1",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_erased",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_witnesses",
        "projection_inverse_Pulse.Syntax.Tm_Par__0",
        "projection_inverse_Pulse.Syntax.Tm_Par__1",
        "projection_inverse_Pulse.Syntax.Tm_Par__2",
        "projection_inverse_Pulse.Syntax.Tm_Par__3",
        "projection_inverse_Pulse.Syntax.Tm_Par__4",
        "projection_inverse_Pulse.Syntax.Tm_Par__5",
        "projection_inverse_Pulse.Syntax.Tm_Protect__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__1",
        "projection_inverse_Pulse.Syntax.Tm_Return__2",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__0",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__1",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_STApp_head",
        "projection_inverse_Pulse.Syntax.Tm_While__0",
        "projection_inverse_Pulse.Syntax.Tm_While__1",
        "projection_inverse_Pulse.Syntax.Tm_While__2",
        "refinement_interpretation_Tm_refine_331395f069789d5bea9247a2c64267d2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_949ffb6c837b8de2dc4f073575bc9a1c",
        "subterm_ordering_Pulse.Syntax.Tm_Abs",
        "subterm_ordering_Pulse.Syntax.Tm_Bind",
        "subterm_ordering_Pulse.Syntax.Tm_If",
        "subterm_ordering_Pulse.Syntax.Tm_Par",
        "subterm_ordering_Pulse.Syntax.Tm_Protect",
        "subterm_ordering_Pulse.Syntax.Tm_While",
        "token_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_list_",
        "typing_Pulse.Syntax.ln_opt_", "typing_Pulse.Syntax.ln_st_",
        "typing_Pulse.Syntax.open_st_term_",
        "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.open_term_list_",
        "typing_Pulse.Syntax.open_term_opt_",
        "typing_Pulse.Syntax.uu___is_Tm_Return"
      ],
      0,
      "34bf7395d5d7bee3b8a53b48a222fcde"
    ],
    [
      "Pulse.Typing.LN.close_term_ln'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_comp_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_c_.fuel_instrumented", "@query",
        "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_0",
        "binder_x_e4a3f40f0272333e7a40e4f08328a985_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Arrow",
        "constructor_distinct_Pulse.Syntax.Tm_BVar",
        "constructor_distinct_Pulse.Syntax.Tm_Constant",
        "constructor_distinct_Pulse.Syntax.Tm_Emp",
        "constructor_distinct_Pulse.Syntax.Tm_EmpInames",
        "constructor_distinct_Pulse.Syntax.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Tm_FVar",
        "constructor_distinct_Pulse.Syntax.Tm_ForallSL",
        "constructor_distinct_Pulse.Syntax.Tm_Inames",
        "constructor_distinct_Pulse.Syntax.Tm_Let",
        "constructor_distinct_Pulse.Syntax.Tm_Pure",
        "constructor_distinct_Pulse.Syntax.Tm_PureApp",
        "constructor_distinct_Pulse.Syntax.Tm_Refine",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "constructor_distinct_Pulse.Syntax.Tm_Type",
        "constructor_distinct_Pulse.Syntax.Tm_UInst",
        "constructor_distinct_Pulse.Syntax.Tm_UVar",
        "constructor_distinct_Pulse.Syntax.Tm_Unknown",
        "constructor_distinct_Pulse.Syntax.Tm_VProp",
        "constructor_distinct_Pulse.Syntax.Tm_Var",
        "disc_equation_Pulse.Syntax.Tm_Arrow",
        "disc_equation_Pulse.Syntax.Tm_BVar",
        "disc_equation_Pulse.Syntax.Tm_Constant",
        "disc_equation_Pulse.Syntax.Tm_Emp",
        "disc_equation_Pulse.Syntax.Tm_EmpInames",
        "disc_equation_Pulse.Syntax.Tm_ExistsSL",
        "disc_equation_Pulse.Syntax.Tm_FVar",
        "disc_equation_Pulse.Syntax.Tm_ForallSL",
        "disc_equation_Pulse.Syntax.Tm_Inames",
        "disc_equation_Pulse.Syntax.Tm_Let",
        "disc_equation_Pulse.Syntax.Tm_Pure",
        "disc_equation_Pulse.Syntax.Tm_PureApp",
        "disc_equation_Pulse.Syntax.Tm_Refine",
        "disc_equation_Pulse.Syntax.Tm_Star",
        "disc_equation_Pulse.Syntax.Tm_Type",
        "disc_equation_Pulse.Syntax.Tm_UInst",
        "disc_equation_Pulse.Syntax.Tm_UVar",
        "disc_equation_Pulse.Syntax.Tm_Unknown",
        "disc_equation_Pulse.Syntax.Tm_VProp",
        "disc_equation_Pulse.Syntax.Tm_Var",
        "equality_tok_Pulse.Syntax.Tm_Emp@tok",
        "equality_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "equality_tok_Pulse.Syntax.Tm_Inames@tok",
        "equality_tok_Pulse.Syntax.Tm_Unknown@tok",
        "equality_tok_Pulse.Syntax.Tm_VProp@tok", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.var",
        "equation_with_fuel_Pulse.Syntax.close_term_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.binder",
        "fuel_guarded_inversion_Pulse.Syntax.term", "int_inversion",
        "int_typing", "lemma_Pulse.Typing.LN.ln_weakening",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Mkbv_bv_index",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_b",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_body",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_q",
        "projection_inverse_Pulse.Syntax.Tm_BVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Constant_c",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_should_elim",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_u",
        "projection_inverse_Pulse.Syntax.Tm_FVar_l",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ForallSL_u",
        "projection_inverse_Pulse.Syntax.Tm_Let_e1",
        "projection_inverse_Pulse.Syntax.Tm_Let_e2",
        "projection_inverse_Pulse.Syntax.Tm_Let_t",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Pure_p",
        "projection_inverse_Pulse.Syntax.Tm_Refine__1",
        "projection_inverse_Pulse.Syntax.Tm_Refine_b",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "projection_inverse_Pulse.Syntax.Tm_Type__0",
        "projection_inverse_Pulse.Syntax.Tm_UInst_l",
        "projection_inverse_Pulse.Syntax.Tm_UInst_us",
        "projection_inverse_Pulse.Syntax.Tm_UVar__0",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7a7b3109d28bf0f8739fa06a024856ff",
        "refinement_interpretation_Tm_refine_85d3e655543375cb03aa830056efb8bd",
        "subterm_ordering_Pulse.Syntax.Mkbinder",
        "subterm_ordering_Pulse.Syntax.Tm_Arrow",
        "subterm_ordering_Pulse.Syntax.Tm_ExistsSL",
        "subterm_ordering_Pulse.Syntax.Tm_ForallSL",
        "subterm_ordering_Pulse.Syntax.Tm_Let",
        "subterm_ordering_Pulse.Syntax.Tm_Pure",
        "subterm_ordering_Pulse.Syntax.Tm_PureApp",
        "subterm_ordering_Pulse.Syntax.Tm_Refine",
        "subterm_ordering_Pulse.Syntax.Tm_Star",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.close_comp_", "typing_Pulse.Syntax.close_term_",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.uu___is_Tm_BVar",
        "typing_tok_Pulse.Syntax.Tm_Emp@tok",
        "typing_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "typing_tok_Pulse.Syntax.Tm_Inames@tok",
        "typing_tok_Pulse.Syntax.Tm_Unknown@tok",
        "typing_tok_Pulse.Syntax.Tm_VProp@tok"
      ],
      0,
      "44cee8716377cb2f2883e01db77a91af"
    ],
    [
      "Pulse.Typing.LN.close_term_ln'",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_comp_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented", "@query",
        "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "binder_x_11af3804211c949491be1003e48ef637_0",
        "binder_x_e4a3f40f0272333e7a40e4f08328a985_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "constructor_distinct_Pulse.Syntax.C_Tot",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.var",
        "equation_with_fuel_Pulse.Syntax.close_comp_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.close_st_comp_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.C_Tot__0",
        "projection_inverse_Pulse.Syntax.Mkst_comp_post",
        "projection_inverse_Pulse.Syntax.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Mkst_comp_res",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_f139dc2070589aa0d547e33e5335e044",
        "subterm_ordering_Pulse.Syntax.C_ST",
        "subterm_ordering_Pulse.Syntax.C_STAtomic",
        "subterm_ordering_Pulse.Syntax.C_STGhost",
        "subterm_ordering_Pulse.Syntax.C_Tot",
        "subterm_ordering_Pulse.Syntax.Mkst_comp",
        "token_correspondence_Pulse.Syntax.close_st_comp_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.close_comp_", "typing_Pulse.Syntax.close_term_",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.uu___is_C_Tot"
      ],
      0,
      "a2c076f5988bde9e24d7d67506fb2d69"
    ],
    [
      "Pulse.Typing.LN.close_term_ln_opt'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented", "@query",
        "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None", "equation_Prims.nat",
        "equation_Pulse.Syntax.close_term_opt_",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.var", "int_inversion", "int_typing",
        "kinding_Pulse.Syntax.term@tok",
        "lemma_FStar.Pervasives.invertOption",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "typing_Pulse.Syntax.ln_opt_"
      ],
      0,
      "d03486b18a6203509af89636fd203840"
    ],
    [
      "Pulse.Typing.LN.close_term_ln_list'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.close_term_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_term_list_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@query", "Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed",
        "binder_x_194ca042d8709e0e0ef243686ac7a8f1_0",
        "binder_x_e4a3f40f0272333e7a40e4f08328a985_1",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Tm_unit", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Prims.nat",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.var",
        "equation_with_fuel_Pulse.Syntax.close_term_list_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_list_.fuel_instrumented",
        "int_inversion", "int_typing", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "string_typing", "subterm_ordering_Prims.Cons",
        "token_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "typing_Pulse.Syntax.close_term_",
        "typing_Pulse.Syntax.close_term_list_", "typing_Pulse.Syntax.ln_",
        "typing_Pulse.Syntax.ln_list_"
      ],
      0,
      "877e871fd2e6ea271bed1f5074cad209"
    ],
    [
      "Pulse.Typing.LN.close_st_term_ln'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_st_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.close_term_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_st_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_.fuel_instrumented", "@query",
        "Pulse.Syntax_pretyping_e80a7984709b7e5db0aad12cc865623d",
        "binder_x_e4a3f40f0272333e7a40e4f08328a985_1",
        "binder_x_e80a7984709b7e5db0aad12cc865623d_0",
        "binder_x_e842272537c611f78d1316648c8ccd28_2", "bool_inversion",
        "bool_typing", "constructor_distinct_Pulse.Syntax.Tm_Abs",
        "constructor_distinct_Pulse.Syntax.Tm_Admit",
        "constructor_distinct_Pulse.Syntax.Tm_Bind",
        "constructor_distinct_Pulse.Syntax.Tm_ElimExists",
        "constructor_distinct_Pulse.Syntax.Tm_If",
        "constructor_distinct_Pulse.Syntax.Tm_IntroExists",
        "constructor_distinct_Pulse.Syntax.Tm_Par",
        "constructor_distinct_Pulse.Syntax.Tm_Protect",
        "constructor_distinct_Pulse.Syntax.Tm_Return",
        "constructor_distinct_Pulse.Syntax.Tm_Rewrite",
        "constructor_distinct_Pulse.Syntax.Tm_STApp",
        "constructor_distinct_Pulse.Syntax.Tm_While",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_Pulse.Syntax.Tm_Abs",
        "disc_equation_Pulse.Syntax.Tm_Admit",
        "disc_equation_Pulse.Syntax.Tm_Bind",
        "disc_equation_Pulse.Syntax.Tm_ElimExists",
        "disc_equation_Pulse.Syntax.Tm_If",
        "disc_equation_Pulse.Syntax.Tm_IntroExists",
        "disc_equation_Pulse.Syntax.Tm_Par",
        "disc_equation_Pulse.Syntax.Tm_Protect",
        "disc_equation_Pulse.Syntax.Tm_Return",
        "disc_equation_Pulse.Syntax.Tm_Rewrite",
        "disc_equation_Pulse.Syntax.Tm_STApp",
        "disc_equation_Pulse.Syntax.Tm_While", "equation_Prims.nat",
        "equation_Pulse.Syntax.close_term_opt_",
        "equation_Pulse.Syntax.index", "equation_Pulse.Syntax.ln_opt_",
        "equation_Pulse.Syntax.var", "equation_Pulse.Syntax.vprop",
        "equation_with_fuel_Pulse.Syntax.close_st_term_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Pulse.Syntax.st_term", "int_inversion",
        "int_typing", "lemma_Pulse.Typing.LN.ln_weakening",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Tm_Abs_b",
        "projection_inverse_Pulse.Syntax.Tm_Abs_body",
        "projection_inverse_Pulse.Syntax.Tm_Abs_post",
        "projection_inverse_Pulse.Syntax.Tm_Abs_pre",
        "projection_inverse_Pulse.Syntax.Tm_Abs_q",
        "projection_inverse_Pulse.Syntax.Tm_Admit__0",
        "projection_inverse_Pulse.Syntax.Tm_Admit__1",
        "projection_inverse_Pulse.Syntax.Tm_Admit__2",
        "projection_inverse_Pulse.Syntax.Tm_Admit__3",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e1",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e2",
        "projection_inverse_Pulse.Syntax.Tm_ElimExists__0",
        "projection_inverse_Pulse.Syntax.Tm_If_b",
        "projection_inverse_Pulse.Syntax.Tm_If_else_",
        "projection_inverse_Pulse.Syntax.Tm_If_post",
        "projection_inverse_Pulse.Syntax.Tm_If_then_",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists__1",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_erased",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_witnesses",
        "projection_inverse_Pulse.Syntax.Tm_Par__0",
        "projection_inverse_Pulse.Syntax.Tm_Par__1",
        "projection_inverse_Pulse.Syntax.Tm_Par__2",
        "projection_inverse_Pulse.Syntax.Tm_Par__3",
        "projection_inverse_Pulse.Syntax.Tm_Par__4",
        "projection_inverse_Pulse.Syntax.Tm_Par__5",
        "projection_inverse_Pulse.Syntax.Tm_Protect__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__1",
        "projection_inverse_Pulse.Syntax.Tm_Return__2",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__0",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__1",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_STApp_head",
        "projection_inverse_Pulse.Syntax.Tm_While__0",
        "projection_inverse_Pulse.Syntax.Tm_While__1",
        "projection_inverse_Pulse.Syntax.Tm_While__2",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9afa68636b361fe66d799a8c863d230d",
        "subterm_ordering_Pulse.Syntax.Tm_Abs",
        "subterm_ordering_Pulse.Syntax.Tm_Bind",
        "subterm_ordering_Pulse.Syntax.Tm_If",
        "subterm_ordering_Pulse.Syntax.Tm_Par",
        "subterm_ordering_Pulse.Syntax.Tm_Protect",
        "subterm_ordering_Pulse.Syntax.Tm_While",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.close_st_term_",
        "typing_Pulse.Syntax.close_term_",
        "typing_Pulse.Syntax.close_term_list_",
        "typing_Pulse.Syntax.close_term_opt_", "typing_Pulse.Syntax.ln_",
        "typing_Pulse.Syntax.ln_list_", "typing_Pulse.Syntax.ln_opt_",
        "typing_Pulse.Syntax.ln_st_", "typing_Pulse.Syntax.uu___is_Tm_Return"
      ],
      0,
      "92e0280d039ecf636346492baa849131"
    ],
    [
      "Pulse.Typing.LN.close_comp_ln",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.nat",
        "equation_Pulse.Syntax.close_comp", "equation_Pulse.Syntax.ln_c",
        "equation_Pulse.Syntax.var", "int_inversion",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2"
      ],
      0,
      "18c6ac459ee3141a38fbb12300b124fe"
    ],
    [
      "Pulse.Typing.LN.test",
      1,
      2,
      2,
      [
        "@query", "primitive_Prims.op_Addition",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "09340de89324728191d03eff71dc7ad8"
    ],
    [
      "Pulse.Typing.LN.lift_comp_ln",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@query", "bool_inversion", "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "data_elim_Pulse.Typing.Lift_STAtomic_ST",
        "data_elim_Pulse.Typing.Lift_STGhost_STAtomic",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "equation_Pulse.Syntax.comp_inames", "equation_Pulse.Syntax.ln_c",
        "equation_Pulse.Syntax.st_comp_of_comp",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Typing.lift_comp", "int_typing",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "refinement_interpretation_Tm_refine_2e01818c2399c6683610a0892b502185",
        "refinement_interpretation_Tm_refine_c637013478d10b19abd3f14dfedef2dd",
        "typing_Pulse.Syntax.ln_c"
      ],
      0,
      "3b8c78bcbe41789bc40972a8994602c0"
    ],
    [
      "Pulse.Typing.LN.tot_typing_ln",
      1,
      2,
      2,
      [ "@query" ],
      0,
      "a8dd2ce39183a7d0a5614479fe2fd5ab"
    ],
    [
      "Pulse.Typing.LN.vprop_equiv_ln",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented", "@query",
        "binder_x_3b319146dc6a04000aba79653a6bc0ef_4",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_2",
        "binder_x_4c195d6c6159263d6821555f8fc72b71_3",
        "binder_x_8a6a2d7cd56469c38f58e69d6ca70e17_0", "bool_inversion",
        "constructor_distinct_Pulse.Syntax.Tm_Emp",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "data_elim_Pulse.Syntax.Mkbv", "data_elim_Pulse.Syntax.Tm_BVar",
        "data_elim_Pulse.Typing.VE_Assoc", "data_elim_Pulse.Typing.VE_Comm",
        "data_elim_Pulse.Typing.VE_Ctxt", "data_elim_Pulse.Typing.VE_Ext",
        "data_elim_Pulse.Typing.VE_Refl", "data_elim_Pulse.Typing.VE_Sym",
        "data_elim_Pulse.Typing.VE_Trans", "data_elim_Pulse.Typing.VE_Unit",
        "data_typing_intro_Pulse.Syntax.Tm_Star@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Pulse.Typing.VE_Assoc",
        "disc_equation_Pulse.Typing.VE_Comm",
        "disc_equation_Pulse.Typing.VE_Ctxt",
        "disc_equation_Pulse.Typing.VE_Ext",
        "disc_equation_Pulse.Typing.VE_Refl",
        "disc_equation_Pulse.Typing.VE_Sym",
        "disc_equation_Pulse.Typing.VE_Trans",
        "disc_equation_Pulse.Typing.VE_Unit",
        "equality_tok_Pulse.Syntax.Tm_Emp@tok",
        "equation_FStar.Reflection.Typing.fstar_top_env",
        "equation_Prims.nat", "equation_Pulse.Syntax.index",
        "equation_Pulse.Syntax.ln",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.bv",
        "fuel_guarded_inversion_Pulse.Typing.vprop_equiv",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "refinement_interpretation_Tm_refine_262f039a938fc14ac016e995f8cd074e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "subterm_ordering_Pulse.Typing.VE_Ctxt",
        "subterm_ordering_Pulse.Typing.VE_Sym",
        "subterm_ordering_Pulse.Typing.VE_Trans",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "typing_Pulse.Syntax.ln", "typing_tok_Pulse.Syntax.Tm_Emp@tok"
      ],
      0,
      "83846d35eb9cb12533ab92cd942de8a5"
    ],
    [
      "Pulse.Typing.LN.st_equiv_ln",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "bool_inversion", "constructor_distinct_Pulse.Syntax.Tm_Var",
        "data_elim_Pulse.Syntax.C_ST", "data_elim_Pulse.Syntax.C_STAtomic",
        "data_elim_Pulse.Syntax.C_STGhost",
        "data_elim_Pulse.Typing.ST_VPropEquiv",
        "data_typing_intro_Pulse.Syntax.Mkst_comp@tok",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot",
        "equation_Pulse.Syntax.comp_post", "equation_Pulse.Syntax.comp_pre",
        "equation_Pulse.Syntax.comp_res", "equation_Pulse.Syntax.comp_st",
        "equation_Pulse.Syntax.comp_u", "equation_Pulse.Syntax.ln",
        "equation_Pulse.Syntax.ln_c", "equation_Pulse.Syntax.open_term",
        "equation_Pulse.Syntax.stateful_comp",
        "equation_Pulse.Syntax.term_of_var",
        "equation_Pulse.Typing.st_equiv_pre",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp",
        "fuel_guarded_inversion_Pulse.Typing.st_equiv", "int_typing",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "proj_equation_Pulse.Syntax.Mkst_comp_u",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "projection_inverse_Pulse.Typing.ST_VPropEquiv_c1",
        "projection_inverse_Pulse.Typing.ST_VPropEquiv_c2",
        "projection_inverse_Pulse.Typing.ST_VPropEquiv_x",
        "refinement_interpretation_Tm_refine_11ec59befb9c4d54a26c6b983715c5d7",
        "refinement_interpretation_Tm_refine_4d744af0ece51878ff5558579232407f",
        "refinement_interpretation_Tm_refine_9ccaab801535aa13d5662b90134148ed",
        "refinement_interpretation_Tm_refine_f80f205a5069280d3f772fce01d30e76",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "typing_Pulse.Syntax.comp_post", "typing_Pulse.Syntax.comp_res",
        "typing_Pulse.Syntax.comp_u", "typing_Pulse.Syntax.ln",
        "typing_Pulse.Syntax.ln_", "typing_Pulse.Syntax.ln_c",
        "typing_Pulse.Syntax.stateful_comp",
        "typing_Pulse.Syntax.term_of_var",
        "typing_Pulse.Syntax.uu___is_C_Tot"
      ],
      0,
      "4520f86c310f0d724b93f185d3e3bfbd"
    ],
    [
      "Pulse.Typing.LN.bind_comp_ln",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@query", "Pulse.Syntax_pretyping_11af3804211c949491be1003e48ef637",
        "Pulse.Syntax_pretyping_73b5efdedc2bbec61b6534c7b4092131",
        "Pulse.Syntax_pretyping_fa029a322c052b76844c36b3c08145e9",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "data_elim_Pulse.Syntax.C_ST", "data_elim_Pulse.Syntax.C_STAtomic",
        "data_elim_Pulse.Syntax.C_STGhost",
        "data_elim_Pulse.Syntax.Mkst_comp",
        "data_elim_Pulse.Typing.Bind_comp",
        "data_elim_Pulse.Typing.Bind_comp_ghost_l",
        "data_elim_Pulse.Typing.Bind_comp_ghost_r",
        "data_typing_intro_Pulse.Syntax.Mkst_comp@tok",
        "data_typing_intro_Pulse.Syntax.U_unknown@tok",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot", "eq2-interp",
        "equation_Prims.nat", "equation_Pulse.Syntax.comp_post",
        "equation_Pulse.Syntax.comp_pre", "equation_Pulse.Syntax.comp_res",
        "equation_Pulse.Syntax.comp_st", "equation_Pulse.Syntax.comp_u",
        "equation_Pulse.Syntax.ln_c", "equation_Pulse.Syntax.stateful_comp",
        "equation_Pulse.Syntax.var",
        "equation_Pulse.Typing.bind_comp_compatible",
        "equation_Pulse.Typing.bind_comp_ghost_l_compatible",
        "equation_Pulse.Typing.bind_comp_ghost_l_out",
        "equation_Pulse.Typing.bind_comp_ghost_l_pre",
        "equation_Pulse.Typing.bind_comp_ghost_r_compatible",
        "equation_Pulse.Typing.bind_comp_ghost_r_out",
        "equation_Pulse.Typing.bind_comp_ghost_r_pre",
        "equation_Pulse.Typing.bind_comp_out",
        "equation_Pulse.Typing.bind_comp_pre",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "false_interp", "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp",
        "fuel_guarded_inversion_Pulse.Typing.bind_comp", "int_inversion",
        "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "proj_equation_Pulse.Syntax.Mkst_comp_u",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.Mkst_comp_post",
        "projection_inverse_Pulse.Syntax.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_Pulse.Syntax.Mkst_comp_u",
        "refinement_interpretation_Tm_refine_0ebc798f058085bb01282be66cdfd8a1",
        "refinement_interpretation_Tm_refine_11ec59befb9c4d54a26c6b983715c5d7",
        "refinement_interpretation_Tm_refine_47ebba36e063e45a09595354d1f35a44",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6f936f6b48e280d624de5f5945ef8e21",
        "refinement_interpretation_Tm_refine_879a0dab6bec27e9dabcc50e5233d595",
        "refinement_interpretation_Tm_refine_967aae11652fe664d22f3cfaeca31adc",
        "refinement_interpretation_Tm_refine_9ccaab801535aa13d5662b90134148ed",
        "refinement_interpretation_Tm_refine_b60a3fff1dfdc0c440afbdaa581abd69",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.comp_post", "typing_Pulse.Syntax.comp_pre",
        "typing_Pulse.Syntax.comp_res", "typing_Pulse.Syntax.comp_u",
        "typing_Pulse.Syntax.ln_c", "typing_Pulse.Syntax.open_term",
        "typing_Pulse.Syntax.stateful_comp",
        "typing_Pulse.Typing.bind_comp_ghost_l_out",
        "typing_Pulse.Typing.bind_comp_ghost_r_out",
        "typing_Pulse.Typing.bind_comp_out"
      ],
      0,
      "34a07b746b6b16dda9a51d80c6bf6e17"
    ],
    [
      "Pulse.Typing.LN.st_typing_ln",
      1,
      8,
      8,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_list_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_correspondence_Pulse.Syntax.open_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.close_term_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_c_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "@query", "Prims_pretyping_3862c4e8ff39bfc3871b6a47e7ff5b2e",
        "Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Pulse.Syntax_pretyping_73b5efdedc2bbec61b6534c7b4092131",
        "Pulse.Syntax_pretyping_fa029a322c052b76844c36b3c08145e9",
        "binder_x_11af3804211c949491be1003e48ef637_3",
        "binder_x_8a6a2d7cd56469c38f58e69d6ca70e17_0",
        "binder_x_8c7e62c5bd1a2303ec4460f08e3db521_4",
        "binder_x_e80a7984709b7e5db0aad12cc865623d_2", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Pulse.Syntax.C_ST",
        "constructor_distinct_Pulse.Syntax.C_STAtomic",
        "constructor_distinct_Pulse.Syntax.C_STGhost",
        "constructor_distinct_Pulse.Syntax.C_Tot",
        "constructor_distinct_Pulse.Syntax.Tm_Abs",
        "constructor_distinct_Pulse.Syntax.Tm_Admit",
        "constructor_distinct_Pulse.Syntax.Tm_Arrow",
        "constructor_distinct_Pulse.Syntax.Tm_Bind",
        "constructor_distinct_Pulse.Syntax.Tm_Constant",
        "constructor_distinct_Pulse.Syntax.Tm_ElimExists",
        "constructor_distinct_Pulse.Syntax.Tm_EmpInames",
        "constructor_distinct_Pulse.Syntax.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Tm_FVar",
        "constructor_distinct_Pulse.Syntax.Tm_If",
        "constructor_distinct_Pulse.Syntax.Tm_IntroExists",
        "constructor_distinct_Pulse.Syntax.Tm_Par",
        "constructor_distinct_Pulse.Syntax.Tm_Pure",
        "constructor_distinct_Pulse.Syntax.Tm_PureApp",
        "constructor_distinct_Pulse.Syntax.Tm_Return",
        "constructor_distinct_Pulse.Syntax.Tm_Rewrite",
        "constructor_distinct_Pulse.Syntax.Tm_STApp",
        "constructor_distinct_Pulse.Syntax.Tm_Star",
        "constructor_distinct_Pulse.Syntax.Tm_Type",
        "constructor_distinct_Pulse.Syntax.Tm_UInst",
        "constructor_distinct_Pulse.Syntax.Tm_Unknown",
        "constructor_distinct_Pulse.Syntax.Tm_VProp",
        "constructor_distinct_Pulse.Syntax.Tm_Var",
        "constructor_distinct_Pulse.Syntax.Tm_While",
        "data_elim_Pulse.Syntax.C_ST", "data_elim_Pulse.Syntax.C_STAtomic",
        "data_elim_Pulse.Syntax.C_STGhost",
        "data_elim_Pulse.Syntax.Mkst_comp",
        "data_elim_Pulse.Syntax.Tm_ElimExists",
        "data_elim_Pulse.Syntax.Tm_IntroExists",
        "data_elim_Pulse.Syntax.Tm_PureApp",
        "data_elim_Pulse.Syntax.Tm_Star", "data_elim_Pulse.Typing.T_Abs",
        "data_elim_Pulse.Typing.T_Admit", "data_elim_Pulse.Typing.T_Bind",
        "data_elim_Pulse.Typing.T_ElimExists",
        "data_elim_Pulse.Typing.T_Equiv", "data_elim_Pulse.Typing.T_Frame",
        "data_elim_Pulse.Typing.T_If",
        "data_elim_Pulse.Typing.T_IntroExists",
        "data_elim_Pulse.Typing.T_IntroExistsErased",
        "data_elim_Pulse.Typing.T_Lift", "data_elim_Pulse.Typing.T_Par",
        "data_elim_Pulse.Typing.T_Return",
        "data_elim_Pulse.Typing.T_Rewrite", "data_elim_Pulse.Typing.T_STApp",
        "data_elim_Pulse.Typing.T_While", "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok",
        "data_typing_intro_Pulse.Syntax.Mknm@tok",
        "data_typing_intro_Pulse.Syntax.Mkst_comp@tok",
        "data_typing_intro_Pulse.Syntax.Tm_Arrow@tok",
        "data_typing_intro_Pulse.Syntax.Tm_Pure@tok",
        "data_typing_intro_Pulse.Syntax.Tm_Star@tok",
        "data_typing_intro_Pulse.Syntax.Tm_Var@tok",
        "data_typing_intro_Pulse.Syntax.U_unknown@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Pulse.Syntax.C_ST",
        "disc_equation_Pulse.Syntax.C_STAtomic",
        "disc_equation_Pulse.Syntax.C_STGhost",
        "disc_equation_Pulse.Syntax.C_Tot",
        "disc_equation_Pulse.Typing.T_Abs",
        "disc_equation_Pulse.Typing.T_Admit",
        "disc_equation_Pulse.Typing.T_Bind",
        "disc_equation_Pulse.Typing.T_ElimExists",
        "disc_equation_Pulse.Typing.T_Equiv",
        "disc_equation_Pulse.Typing.T_Frame",
        "disc_equation_Pulse.Typing.T_If",
        "disc_equation_Pulse.Typing.T_IntroExists",
        "disc_equation_Pulse.Typing.T_IntroExistsErased",
        "disc_equation_Pulse.Typing.T_Lift",
        "disc_equation_Pulse.Typing.T_Par",
        "disc_equation_Pulse.Typing.T_Return",
        "disc_equation_Pulse.Typing.T_Rewrite",
        "disc_equation_Pulse.Typing.T_STApp",
        "disc_equation_Pulse.Typing.T_While",
        "equality_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "equality_tok_Pulse.Syntax.Tm_Unknown@tok",
        "equality_tok_Pulse.Syntax.U_zero@tok",
        "equation_FStar.Reflection.Data.var",
        "equation_FStar.Reflection.Typing.fstar_top_env",
        "equation_FStar.Reflection.Typing.pp_name_default",
        "equation_FStar.Reflection.Typing.pp_name_t",
        "equation_FStar.Reflection.Typing.seal_pp_name",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Pulse.Syntax.close_term",
        "equation_Pulse.Syntax.comp_post", "equation_Pulse.Syntax.comp_pre",
        "equation_Pulse.Syntax.comp_res", "equation_Pulse.Syntax.comp_st",
        "equation_Pulse.Syntax.comp_u", "equation_Pulse.Syntax.index",
        "equation_Pulse.Syntax.ln", "equation_Pulse.Syntax.ln_c",
        "equation_Pulse.Syntax.ln_opt_", "equation_Pulse.Syntax.ln_st",
        "equation_Pulse.Syntax.null_var",
        "equation_Pulse.Syntax.open_comp_with",
        "equation_Pulse.Syntax.open_term", "equation_Pulse.Syntax.ppname",
        "equation_Pulse.Syntax.should_elim_false",
        "equation_Pulse.Syntax.should_elim_t",
        "equation_Pulse.Syntax.stateful_comp",
        "equation_Pulse.Syntax.term_of_var", "equation_Pulse.Syntax.var",
        "equation_Pulse.Syntax.vprop", "equation_Pulse.Typing.add_frame",
        "equation_Pulse.Typing.as_binder",
        "equation_Pulse.Typing.comp_admit",
        "equation_Pulse.Typing.comp_elim_exists",
        "equation_Pulse.Typing.comp_intro_exists",
        "equation_Pulse.Typing.comp_intro_exists_erased",
        "equation_Pulse.Typing.comp_par",
        "equation_Pulse.Typing.comp_return",
        "equation_Pulse.Typing.comp_rewrite",
        "equation_Pulse.Typing.comp_while",
        "equation_Pulse.Typing.comp_while_body",
        "equation_Pulse.Typing.comp_while_cond",
        "equation_Pulse.Typing.elim_exists_post",
        "equation_Pulse.Typing.mk_eq2_prop",
        "equation_Pulse.Typing.mk_erased", "equation_Pulse.Typing.mk_fst",
        "equation_Pulse.Typing.mk_reveal", "equation_Pulse.Typing.mk_snd",
        "equation_Pulse.Typing.mk_tuple2", "equation_Pulse.Typing.par_post",
        "equation_Pulse.Typing.tm_bool", "equation_Pulse.Typing.tm_false",
        "equation_Pulse.Typing.tm_unit",
        "equation_with_fuel_Pulse.Syntax.close_term_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_c_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_list_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_.fuel_instrumented",
        "equation_with_fuel_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "fuel_guarded_inversion_Pulse.Syntax.comp",
        "fuel_guarded_inversion_Pulse.Syntax.ctag",
        "fuel_guarded_inversion_Pulse.Syntax.st_comp",
        "fuel_guarded_inversion_Pulse.Typing.st_comp_typing",
        "fuel_guarded_inversion_Pulse.Typing.st_typing",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.string", "int_inversion", "int_typing",
        "kinding_Pulse.Syntax.term@tok",
        "lemma_FStar.Sealed.Inhabited.sealed_singleton",
        "lemma_Pulse.Typing.LN.ln_weakening", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Negation",
        "proj_equation_Pulse.Syntax.Mkbinder_binder_ty",
        "proj_equation_Pulse.Syntax.Mkst_comp_post",
        "proj_equation_Pulse.Syntax.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Mkst_comp_res",
        "proj_equation_Pulse.Syntax.Mkst_comp_u",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "projection_inverse_Pulse.Syntax.C_STAtomic__0",
        "projection_inverse_Pulse.Syntax.C_STAtomic__1",
        "projection_inverse_Pulse.Syntax.C_STGhost__0",
        "projection_inverse_Pulse.Syntax.C_STGhost__1",
        "projection_inverse_Pulse.Syntax.C_ST__0",
        "projection_inverse_Pulse.Syntax.C_Tot__0",
        "projection_inverse_Pulse.Syntax.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Mkst_comp_post",
        "projection_inverse_Pulse.Syntax.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Mkst_comp_res",
        "projection_inverse_Pulse.Syntax.Mkst_comp_u",
        "projection_inverse_Pulse.Syntax.Tm_Abs_b",
        "projection_inverse_Pulse.Syntax.Tm_Abs_body",
        "projection_inverse_Pulse.Syntax.Tm_Abs_post",
        "projection_inverse_Pulse.Syntax.Tm_Abs_pre",
        "projection_inverse_Pulse.Syntax.Tm_Abs_q",
        "projection_inverse_Pulse.Syntax.Tm_Admit__0",
        "projection_inverse_Pulse.Syntax.Tm_Admit__1",
        "projection_inverse_Pulse.Syntax.Tm_Admit__2",
        "projection_inverse_Pulse.Syntax.Tm_Admit__3",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_b",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_body",
        "projection_inverse_Pulse.Syntax.Tm_Arrow_q",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e1",
        "projection_inverse_Pulse.Syntax.Tm_Bind_e2",
        "projection_inverse_Pulse.Syntax.Tm_Constant_c",
        "projection_inverse_Pulse.Syntax.Tm_ElimExists__0",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_should_elim",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_t",
        "projection_inverse_Pulse.Syntax.Tm_ExistsSL_u",
        "projection_inverse_Pulse.Syntax.Tm_FVar_l",
        "projection_inverse_Pulse.Syntax.Tm_If_b",
        "projection_inverse_Pulse.Syntax.Tm_If_else_",
        "projection_inverse_Pulse.Syntax.Tm_If_post",
        "projection_inverse_Pulse.Syntax.Tm_If_then_",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists__1",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_erased",
        "projection_inverse_Pulse.Syntax.Tm_IntroExists_witnesses",
        "projection_inverse_Pulse.Syntax.Tm_Par__0",
        "projection_inverse_Pulse.Syntax.Tm_Par__1",
        "projection_inverse_Pulse.Syntax.Tm_Par__2",
        "projection_inverse_Pulse.Syntax.Tm_Par__3",
        "projection_inverse_Pulse.Syntax.Tm_Par__4",
        "projection_inverse_Pulse.Syntax.Tm_Par__5",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_PureApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Pure_p",
        "projection_inverse_Pulse.Syntax.Tm_Return__0",
        "projection_inverse_Pulse.Syntax.Tm_Return__1",
        "projection_inverse_Pulse.Syntax.Tm_Return__2",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__0",
        "projection_inverse_Pulse.Syntax.Tm_Rewrite__1",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg",
        "projection_inverse_Pulse.Syntax.Tm_STApp_arg_qual",
        "projection_inverse_Pulse.Syntax.Tm_STApp_head",
        "projection_inverse_Pulse.Syntax.Tm_Star_l",
        "projection_inverse_Pulse.Syntax.Tm_Star_r",
        "projection_inverse_Pulse.Syntax.Tm_UInst_l",
        "projection_inverse_Pulse.Syntax.Tm_UInst_us",
        "projection_inverse_Pulse.Syntax.Tm_Var__0",
        "projection_inverse_Pulse.Syntax.Tm_While__0",
        "projection_inverse_Pulse.Syntax.Tm_While__1",
        "projection_inverse_Pulse.Syntax.Tm_While__2",
        "projection_inverse_Pulse.Typing.STC_st",
        "projection_inverse_Pulse.Typing.T_STApp_head",
        "projection_inverse_Pulse.Typing.T_STApp_ty",
        "refinement_interpretation_Tm_refine_11ec59befb9c4d54a26c6b983715c5d7",
        "refinement_interpretation_Tm_refine_262f039a938fc14ac016e995f8cd074e",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_449c329eff4fbc8ff8ea7a626bd1c76e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_58a50f83488f8045f741b179cf58f01a",
        "refinement_interpretation_Tm_refine_714150fa0548bfc985892702752b2512",
        "refinement_interpretation_Tm_refine_8d476c1890db1231f4f51da8fc696af8",
        "refinement_interpretation_Tm_refine_9ccaab801535aa13d5662b90134148ed",
        "refinement_interpretation_Tm_refine_e0f0a23661affdf78329ab4d4842e2e1",
        "refinement_interpretation_Tm_refine_e5a5791f58e12a7c4432d770bf9ca56d",
        "string_typing", "subterm_ordering_Pulse.Typing.T_Abs",
        "subterm_ordering_Pulse.Typing.T_Bind",
        "subterm_ordering_Pulse.Typing.T_Equiv",
        "subterm_ordering_Pulse.Typing.T_Frame",
        "subterm_ordering_Pulse.Typing.T_If",
        "subterm_ordering_Pulse.Typing.T_Lift",
        "subterm_ordering_Pulse.Typing.T_Par",
        "subterm_ordering_Pulse.Typing.T_While",
        "token_correspondence_Pulse.Syntax.close_term_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_c_.fuel_instrumented",
        "token_correspondence_Pulse.Syntax.ln_st_comp.fuel_instrumented",
        "typing_FStar.Reflection.Typing.seal_pp_name",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__post",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__pre",
        "typing_Pulse.Syntax.__proj__Mkst_comp__item__res",
        "typing_Pulse.Syntax.close_comp", "typing_Pulse.Syntax.close_term_",
        "typing_Pulse.Syntax.comp_post", "typing_Pulse.Syntax.comp_pre",
        "typing_Pulse.Syntax.comp_res", "typing_Pulse.Syntax.comp_u",
        "typing_Pulse.Syntax.ln", "typing_Pulse.Syntax.ln_",
        "typing_Pulse.Syntax.ln_c", "typing_Pulse.Syntax.ln_c_",
        "typing_Pulse.Syntax.ln_list_", "typing_Pulse.Syntax.ln_st",
        "typing_Pulse.Syntax.ln_st_", "typing_Pulse.Syntax.null_var",
        "typing_Pulse.Syntax.open_term", "typing_Pulse.Syntax.open_term_",
        "typing_Pulse.Syntax.should_elim_true",
        "typing_Pulse.Syntax.term_of_var", "typing_Pulse.Typing.add_frame",
        "typing_Pulse.Typing.as_binder",
        "typing_Pulse.Typing.comp_while_body",
        "typing_Pulse.Typing.comp_while_cond",
        "typing_Pulse.Typing.elim_exists_post",
        "typing_Pulse.Typing.mk_eq2_prop", "typing_Pulse.Typing.mk_erased",
        "typing_Pulse.Typing.mk_fst", "typing_Pulse.Typing.mk_reveal",
        "typing_Pulse.Typing.mk_snd", "typing_Pulse.Typing.mk_tuple2",
        "typing_Pulse.Typing.tm_bool", "typing_Pulse.Typing.tm_false",
        "typing_Pulse.Typing.tm_true", "typing_Pulse.Typing.tm_unit",
        "typing_tok_Pulse.Syntax.Tm_EmpInames@tok",
        "typing_tok_Pulse.Syntax.Tm_Unknown@tok",
        "typing_tok_Pulse.Syntax.U_zero@tok", "unit_inversion", "unit_typing"
      ],
      0,
      "0ddb07c2f2ee390c19e374fc3eca5a1b"
    ]
  ]
]