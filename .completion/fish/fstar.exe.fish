# fstar.exe
# auto-generated from output of `fstar.exe --help`
# using FStar/.scripts/fstar_fish_completions.py
complete -c fstar.exe -l admit_smt_queries -r --description "Admit SMT queries, unsafe! (default 'false')"
complete -c fstar.exe -l admit_except -r --description "Admit all verification conditions, except those with query label <id> (eg, --admit_except '(FStar.Fin.pigeonhole, 1)'"
complete -c fstar.exe -l codegen -r --description "Generate code for execution"
complete -c fstar.exe -l codegen-lib -r --description "External runtime library (i.e. M.N.x extracts to M.N.X instead of M_N.x)"
complete -c fstar.exe -l debug -r --description "Print lots of debugging information while checking module"
complete -c fstar.exe -l debug_level -r --description "Control the verbosity of debugging info"
complete -c fstar.exe -l dep -r --description "Output the transitive closure of the dependency graph in a format suitable for the given tool"
complete -c fstar.exe -l detail_errors --description "Emit a detailed error report by asking the SMT solver many queries; will take longer;"
complete -c fstar.exe -l detail_hint_replay --description "Emit a detailed report for proof whose unsat core fails to replay;"
complete -c fstar.exe -l doc --description "Extract Markdown documentation files for the input modules, as well as an index. Output is written to --odir directory."
complete -c fstar.exe -l dump_module --description "[module name]"
complete -c fstar.exe -l eager_inference --description "Solve all type-inference constraints eagerly; more efficient but at the cost of generality"
complete -c fstar.exe -l explicit_deps --description "Do not find dependencies automatically, the user provides them on the command-line"
complete -c fstar.exe -l extract_all --description "Discover the complete dependency graph and do not stop at interface boundaries"
complete -c fstar.exe -l extract_module -r --description "Only extract the specified modules (instead of the possibly-partial dependency graph)"
complete -c fstar.exe -l extract_namespace -r --description "Only extract modules in the specified namespace"
complete -c fstar.exe -l fstar_home -r --description "Set the FSTAR_HOME variable to [dir]"
complete -c fstar.exe -l hide_genident_nums --description "Don't print generated identifier numbers"
complete -c fstar.exe -l hide_uvar_nums --description "Don't print unification variable numbers"
complete -c fstar.exe -l hint_info --description "Print information regarding hints"
complete -c fstar.exe -l hint_file -r --description "Read/write hints to <path> (instead of module-specific hints files)"
complete -c fstar.exe -l in --description "Legacy interactive mode; reads input from stdin"
complete -c fstar.exe -l ide --description "JSON-based interactive mode for IDEs"
complete -c fstar.exe -l include -r --description "A directory in which to search for files included on the command line"
complete -c fstar.exe -l indent --description "Parses and outputs the files on the command line"
complete -c fstar.exe -l initial_fuel -r --description "Number of unrolling of recursive functions to try initially (default 2)"
complete -c fstar.exe -l initial_ifuel -r --description "Number of unrolling of inductive datatypes to try at first (default 1)"
complete -c fstar.exe -l inline_arith --description "Inline definitions of arithmetic functions in the SMT encoding"
complete -c fstar.exe -l lax --description "Run the lax-type checker only (admit all verification conditions)"
complete -c fstar.exe -l load -r --description "Load compiled module"
complete -c fstar.exe -l log_types --description "Print types computed for data/val/let-bindings"
complete -c fstar.exe -l log_queries --description "Log the Z3 queries in several queries-*.smt2 files, as we go"
complete -c fstar.exe -l max_fuel -r --description "Number of unrolling of recursive functions to try at most (default 8)"
complete -c fstar.exe -l max_ifuel -r --description "Number of unrolling of inductive datatypes to try at most (default 2)"
complete -c fstar.exe -l min_fuel -r --description "Minimum number of unrolling of recursive functions to try (default 1)"
complete -c fstar.exe -l MLish --description "Trigger various specializations for compiling the F* compiler itself (not meant for user code)"
complete -c fstar.exe -l n_cores -r --description "Maximum number of cores to use for the solver (implies detail_errors = false) (default 1)"
complete -c fstar.exe -l no_default_includes --description "Ignore the default module search paths"
complete -c fstar.exe -l no_extract -r --description "Do not extract code from this module"
complete -c fstar.exe -l no_location_info --description "Suppress location information in the generated OCaml output (only relevant with --codegen OCaml)"
complete -c fstar.exe -l odir -r --description "Place output in directory [dir]"
complete -c fstar.exe -l prims --description "file"
complete -c fstar.exe -l print_bound_var_types --description "Print the types of bound variables"
complete -c fstar.exe -l print_effect_args --description "Print inferred predicate transformers for all computation types"
complete -c fstar.exe -l print_fuels --description "Print the fuel amounts used for each successful query"
complete -c fstar.exe -l print_full_names --description "Print full names of variables"
complete -c fstar.exe -l print_implicits --description "Print implicit arguments"
complete -c fstar.exe -l print_universes --description "Print universes"
complete -c fstar.exe -l print_z3_statistics --description "Print Z3 statistics for each SMT query"
complete -c fstar.exe -l prn --description "Print full names (deprecated; use --print_full_names instead)"
complete -c fstar.exe -l record_hints --description "Record a database of hints for efficient proof replay"
complete -c fstar.exe -l check_hints --description "Check new hints for replayability"
complete -c fstar.exe -l reuse_hint_for --description "top-level name in the current module  Optimistically, attempt using the recorded hint for 'f' when trying to verify some other term 'g'"
complete -c fstar.exe -l show_signatures -r --description "Show the checked signatures for all top-level symbols in the module"
complete -c fstar.exe -l smt -r --description "Path to the Z3 SMT solver (we could eventually support other solvers)"
complete -c fstar.exe -l smtencoding.elim_box --description "true|false  Toggle a peephole optimization that eliminates redundant uses of boxing/unboxing in the SMT encoding (default 'false')"
complete -c fstar.exe -l smtencoding.nl_arith_repr --description "native|wrapped|boxwrap  Control the representation of non-linear arithmetic functions in the SMT encoding:"
complete -c fstar.exe -l smtencoding.l_arith_repr --description "native|boxwrap  Toggle the representation of linear arithmetic functions in the SMT encoding:"
complete -c fstar.exe -l split_cases -r --description "cases"
complete -c fstar.exe -l timing --description "Print the time it takes to verify each top-level definition"
complete -c fstar.exe -l trace_error --description "Don't print an error message; show an exception trace instead"
complete -c fstar.exe -l ugly --description "Emit output formatted for debugging"
complete -c fstar.exe -l unthrottle_inductives --description "Let the SMT solver unfold inductive types to arbitrary depths (may affect verifier performance)"
complete -c fstar.exe -l use_eq_at_higher_order --description "Use equality constraints when comparing higher-order types (Temporary)"
complete -c fstar.exe -l use_hints --description "Use a previously recorded hints database for proof replay"
complete -c fstar.exe -l no_tactics --description "Do not run the tactic engine before discharging a VC"
complete -c fstar.exe -l using_facts_from -r --description "Implies --z3refresh; prunes the context to include facts from the given namespace of fact id (multiple uses of this option will prune the context to include those facts that match any of the provided namespaces / fact ids"
complete -c fstar.exe -l verify_all --description "With automatic dependencies, verify all the dependencies, not just the files passed on the command-line."
complete -c fstar.exe -l verify_module -r --description "Name of the module to verify"
complete -c fstar.exe -l __temp_no_proj -r --description "Don't generate projectors for this module"
complete -c fstar.exe -l version --description "Display version number"
complete -c fstar.exe -l warn_default_effects --description "Warn when (a -> b) is desugared to (a -> Tot b)"
complete -c fstar.exe -l z3cliopt -r --description "Z3 command line options"
complete -c fstar.exe -l z3refresh --description "Restart Z3 after each query; useful for ensuring proof robustness"
complete -c fstar.exe -l z3rlimit -r --description "Set the Z3 per-query resource limit (default 5 units, taking roughtly 5s)"
complete -c fstar.exe -l z3rlimit_factor -r --description "Set the Z3 per-query resource limit multiplier. This is useful when, say, regenerating hints and you want to be more lax. (default 1)"
complete -c fstar.exe -l z3seed -r --description "Set the Z3 random seed (default 0)"
complete -c fstar.exe -l __no_positivity --description "Don't check positivity of inductive types"
complete -c fstar.exe -l __ml_no_eta_expand_coertions --description "Do not eta-expand coertions in generated OCaml"
