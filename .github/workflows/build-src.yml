name: Build F* (src)

on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    # We prefer slightly older Ubuntu so we get binaries that work on
    # all more recent versions.
    steps:
      - uses: actions/checkout@master
        id: checkout

      - name: Check cache
        id: check-cache
        uses: actions/cache/restore@v4
        with:
          path: fstar-src.tar.gz
          key: FStar-src-${{steps.checkout.outputs.commit}}

      - uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 4.14.2

      - name: Prepare
        run: |
          ./.scripts/get_fstar_z3.sh $HOME/bin
          echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV
          opam install --deps-only ./fstar.opam

      - name: Set version
        run: |
          # Setting FSTAR_VERSION for nightly and release builds. If unset,
          # we use $(version.txt)~dev. Setting it avoids the ~dev.
          if [[ "${{github.workflow_ref}}" =~ "nightly.yml" ]]; then
            echo FSTAR_VERSION="nightly-$(date -I)" >> $GITHUB_ENV
          elif [[ "${{github.workflow_ref}}" =~ "release.yml" ]]; then
            echo FSTAR_VERSION="$(cat version.txt)" >> $GITHUB_ENV
            echo FSTAR_RELEASE=1 >> $GITHUB_ENV
          fi

      # NB: release workflow later adds version number to the name
      - name: Build package
        if: steps.check-cache.outputs.cache-hit != 'true'
        run: |
          eval $(opam env)
          export FSTAR_TAG=
          # ^ no tag in source package
          make -skj$(nproc) package-src ADMIT=1

      - name: Save
        if: steps.check-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: fstar-src.tar.gz
          key: FStar-src-${{steps.checkout.outputs.commit}}

      - uses: actions/upload-artifact@v4
        with:
          path: fstar-src.tar.gz
          name: package-src
