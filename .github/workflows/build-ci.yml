name: Build F* (ci)

# This builds F* for Linux for the purposes of CI. It runs on a
# recent Ubuntu-based container and also generates a source package
# and a repo snapshot. For the purposes of binary releases, see
# build-linux.yml.

on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    # Build an F* binary package: a fully-bootstrapped stage 2 compiler,
    # with its plugins, a fully checked library (i.e. with .checked)
    # files and compiled versions of fstar_lib and fstar_plugin_lib.
    # We do not package a stage 1 compiler.
    # runs-on: [self-hosted, linux, X64] # self-hosted so we use fast runners
    runs-on: ubuntu-latest
    container: mtzguido/dev-base
    steps:
      - name: Cleanup
        run: sudo find . -delete
      - run: echo "HOME=/home/user" >> $GITHUB_ENV
      - uses: mtzguido/set-opam-env@master

      - uses: actions/checkout@master
        with:
          path: FStar

      - name: Produce all artifacts
        run: |
          # Note: we don't package Z3 for the CI artifact as the images
          # already have the relevant Z3.
          make -skj$(nproc) package package-src FSTAR_TAG= FSTAR_PACKAGE_Z3=false
        working-directory: FStar

      # Upload the archives.
      - uses: actions/upload-artifact@v4
        with:
          path: FStar/fstar.tar.gz
          name: fstar.tar.gz
          retention-days: 3
      - uses: actions/upload-artifact@v4
        with:
          path: FStar/fstar-src.tar.gz
          name: fstar-src.tar.gz
          retention-days: 3

      # Upload full repo too, for stage3 check and Pulse. Note: we
      # explicitly run 'make setlink-2' at this point to generate the out/
      # directory, as the previous targets do not. Also, remove the
      # previous archives so they don't blow up the size of this
      # artifact.
      - run: rm -f FStar/fstar*.tar.gz
      - run: make setlink-2
        working-directory: FStar

      - uses: mtzguido/gci-upload@master
        with:
          name: fstar-repo
          path: FStar
          extra: --exclude=FStar/stage*/dune/_build
          hometag: FSTAR

      # FIXME: Ideally, we could upload the artifacts as soon as each of
      # them is created, and start the subsequent jobs at that instant too.
      # Is that even doable...?
