module Long

open FStar.Mul
open FStar.Calc

let calc25 (a : int) : Lemma (a == a) =
  calc (==) {
    a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
  }

let calc50 (a : int) : Lemma (a == a) =
  calc (==) {
    a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
  }

let calc75 (a : int) : Lemma (a == a) =
  calc (==) {
    a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
  }

let calc100 (a : int) : Lemma (a == a) =
  calc (==) {
    a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
    == {} a;
  }
