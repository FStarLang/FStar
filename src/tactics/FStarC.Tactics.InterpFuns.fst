(*
   Copyright 2008-2016 Microsoft Research

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*)

module FStarC.Tactics.InterpFuns

(* This module is awful, don't even look at it please. *)

open FStarC
open FStarC
open FStarC.Effect
open FStarC.Syntax.Syntax
open FStarC.Range

open FStarC.Tactics.Types
open FStarC.Tactics.Result
open FStarC.Syntax.Embeddings
open FStarC.Tactics.Native
open FStarC.Tactics.Monad

module PC    = FStarC.Parser.Const
module BU    = FStarC.Util
module E     = FStarC.Tactics.Embedding
module NBET    = FStarC.TypeChecker.NBETerm
module PO    = FStarC.TypeChecker.Primops

let solve (#a:Type) {| ev : a |} : Tot a = ev

(* This module does not use typeclasses *)
let embed (e:embedding 'a) rng (t:'a) n = FStarC.Syntax.Embeddings.embed #_ #e t rng None n
let unembed (e:embedding 'a) t n : option 'a = FStarC.Syntax.Embeddings.unembed #_ #e t n

let interp_ctx s f = Errors.with_ctx ("While running primitive " ^ s) f

let run_wrap (label : string) (t : tac 'a) ps : __result 'a =
  interp_ctx label (fun () -> run_safe t ps)

let builtin_lid nm = PC.fstar_stubs_tactics_lid' ["V2"; "Builtins"; nm]
let types_lid   nm = PC.fstar_stubs_tactics_lid' ["Types"; nm]

let set_auto_reflect arity (p:PO.primitive_step) : PO.primitive_step =
  { p with auto_reflect = Some arity }

let mk_tot_step_1 uarity nm f nbe_f =
  let lid = types_lid nm in
  PO.mk1' uarity lid
    (fun x -> f x |> Some)
    (fun x -> nbe_f x |> Some)

let mk_tot_step_2 uarity nm f nbe_f =
  let lid = types_lid nm in
  PO.mk2' uarity lid
    (fun x y -> f x y |> Some)
    (fun x y -> nbe_f x y |> Some)

let mk_tot_step_1_psc us nm f nbe_f =
  let lid = types_lid nm in
  PO.mk1_psc' us lid
    (fun psc x -> f psc x |> Some)
    (fun psc x -> nbe_f psc x |> Some)

let mk_tac_step_1 univ_arity nm f nbe_f : PO.primitive_step =
  let lid = builtin_lid nm in
  set_auto_reflect 1 <|
    PO.mk2' univ_arity lid
      (fun a ps -> Some (run_wrap nm (f a) ps))
      (fun a ps -> Some (run_wrap nm (nbe_f a) ps))

let mk_tac_step_2 univ_arity nm f nbe_f : PO.primitive_step =
  let lid = builtin_lid nm in
  set_auto_reflect 2 <|
    PO.mk3' univ_arity lid
      (fun a b ps -> Some (run_wrap nm (f a b) ps))
      (fun a b ps -> Some (run_wrap nm (nbe_f a b) ps))

let mk_tac_step_3 univ_arity nm f nbe_f : PO.primitive_step =
  let lid = builtin_lid nm in
  set_auto_reflect 3 <|
    PO.mk4' univ_arity lid
      (fun a b c ps -> Some (run_wrap nm (f a b c) ps))
      (fun a b c ps -> Some (run_wrap nm (nbe_f a b c) ps))

let mk_tac_step_4 univ_arity nm f nbe_f : PO.primitive_step =
  let lid = builtin_lid nm in
  set_auto_reflect 4 <|
    PO.mk5' univ_arity lid
      (fun a b c d ps -> Some (run_wrap nm (f a b c d) ps))
      (fun a b c d ps -> Some (run_wrap nm (nbe_f a b c d) ps))

let mk_tac_step_5 univ_arity nm f nbe_f : PO.primitive_step =
  let lid = builtin_lid nm in
  set_auto_reflect 5 <|
    PO.mk6' univ_arity lid
      (fun a b c d e ps -> Some (run_wrap nm (f a b c d e) ps))
      (fun a b c d e ps -> Some (run_wrap nm (nbe_f a b c d e) ps))

let max_tac_arity = 20

(* NOTE: THE REST OF THIS MODULE IS AUTOGENERATED
 * and here only for plugins to call into. The rest of the compiler
 * makes no use of these functions.
 * See .scripts/mk_tac_interps.sh *)

let mk_tactic_interpretation_1
    (name : string)
    (t : 't1 -> tac 'r)
    (e1:embedding 't1)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed E.e_proofstate a2 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))
  | _ ->
    None

let mk_tactic_interpretation_2
    (name : string)
    (t : 't1 -> 't2 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed E.e_proofstate a3 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))
  | _ ->
    None

let mk_tactic_interpretation_3
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed E.e_proofstate a4 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))
  | _ ->
    None

let mk_tactic_interpretation_4
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed E.e_proofstate a5 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))
  | _ ->
    None

let mk_tactic_interpretation_5
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed E.e_proofstate a6 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))
  | _ ->
    None

let mk_tactic_interpretation_6
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed E.e_proofstate a7 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))
  | _ ->
    None

let mk_tactic_interpretation_7
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed E.e_proofstate a8 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))
  | _ ->
    None

let mk_tactic_interpretation_8
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed E.e_proofstate a9 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))
  | _ ->
    None

let mk_tactic_interpretation_9
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed E.e_proofstate a10 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))
  | _ ->
    None

let mk_tactic_interpretation_10
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed E.e_proofstate a11 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_11
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed E.e_proofstate a12 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_12
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed E.e_proofstate a13 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_13
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed E.e_proofstate a14 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_14
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed E.e_proofstate a15 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_15
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed E.e_proofstate a16 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_16
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed E.e_proofstate a17 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_17
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed E.e_proofstate a18 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_18
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    BU.bind_opt (unembed E.e_proofstate a19 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_19
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (e19:embedding 't19)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    BU.bind_opt (unembed e19 a19 ncb) (fun a19 ->
    BU.bind_opt (unembed E.e_proofstate a20 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb)))))))))))))))))))))
  | _ ->
    None

let mk_tactic_interpretation_20
    (name : string)
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 't20 -> tac 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (e19:embedding 't19)
    (e20:embedding 't20)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _); (a21, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    BU.bind_opt (unembed e19 a19 ncb) (fun a19 ->
    BU.bind_opt (unembed e20 a20 ncb) (fun a20 ->
    BU.bind_opt (unembed E.e_proofstate a21 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20) ps) in
    Some (embed (E.e_result er) (PO.psc_range psc) r ncb))))))))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_1
    (name : string)
    cb
    (t : 't1 -> tac 'r)
    (e1:NBET.embedding 't1)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a2) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))
  | _ ->
    None

let mk_tactic_nbe_interpretation_2
    (name : string)
    cb
    (t : 't1 -> 't2 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a3) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_3
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a4) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_4
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a5) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_5
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a6) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_6
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a7) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_7
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a8) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_8
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a9) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_9
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a10) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_10
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a11) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_11
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a12) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_12
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a13) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_13
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a14) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_14
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a15) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_15
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a16) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_16
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a17) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_17
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a18) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_18
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a19) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_19
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (e19:NBET.embedding 't19)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    BU.bind_opt (NBET.unembed e19 cb a19) (fun a19 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a20) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_20
    (name : string)
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 't20 -> tac 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (e19:NBET.embedding 't19)
    (e20:NBET.embedding 't20)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _); (a21, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    BU.bind_opt (NBET.unembed e19 cb a19) (fun a19 ->
    BU.bind_opt (NBET.unembed e20 cb a20) (fun a20 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a21) (fun ps ->
    let r = interp_ctx name (fun () -> run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20) ps) in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_1
    (name : string)
    (f : 't1 -> 'r)
    (e1:embedding 't1)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    let r = interp_ctx name (fun () -> f a1) in
    Some (embed er (PO.psc_range psc) r ncb))
  | _ ->
    None

let mk_total_interpretation_2
    (name : string)
    (f : 't1 -> 't2 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    let r = interp_ctx name (fun () -> f a1 a2) in
    Some (embed er (PO.psc_range psc) r ncb)))
  | _ ->
    None

let mk_total_interpretation_3
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3) in
    Some (embed er (PO.psc_range psc) r ncb))))
  | _ ->
    None

let mk_total_interpretation_4
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4) in
    Some (embed er (PO.psc_range psc) r ncb)))))
  | _ ->
    None

let mk_total_interpretation_5
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5) in
    Some (embed er (PO.psc_range psc) r ncb))))))
  | _ ->
    None

let mk_total_interpretation_6
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6) in
    Some (embed er (PO.psc_range psc) r ncb)))))))
  | _ ->
    None

let mk_total_interpretation_7
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7) in
    Some (embed er (PO.psc_range psc) r ncb))))))))
  | _ ->
    None

let mk_total_interpretation_8
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))
  | _ ->
    None

let mk_total_interpretation_9
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))
  | _ ->
    None

let mk_total_interpretation_10
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))
  | _ ->
    None

let mk_total_interpretation_11
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))))
  | _ ->
    None

let mk_total_interpretation_12
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))))
  | _ ->
    None

let mk_total_interpretation_13
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))))))
  | _ ->
    None

let mk_total_interpretation_14
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))))))
  | _ ->
    None

let mk_total_interpretation_15
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_16
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_17
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_18
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_19
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (e19:embedding 't19)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    BU.bind_opt (unembed e19 a19 ncb) (fun a19 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19) in
    Some (embed er (PO.psc_range psc) r ncb))))))))))))))))))))
  | _ ->
    None

let mk_total_interpretation_20
    (name : string)
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 't20 -> 'r)
    (e1:embedding 't1)
    (e2:embedding 't2)
    (e3:embedding 't3)
    (e4:embedding 't4)
    (e5:embedding 't5)
    (e6:embedding 't6)
    (e7:embedding 't7)
    (e8:embedding 't8)
    (e9:embedding 't9)
    (e10:embedding 't10)
    (e11:embedding 't11)
    (e12:embedding 't12)
    (e13:embedding 't13)
    (e14:embedding 't14)
    (e15:embedding 't15)
    (e16:embedding 't16)
    (e17:embedding 't17)
    (e18:embedding 't18)
    (e19:embedding 't19)
    (e20:embedding 't20)
    (er:embedding 'r)
    (psc:PO.psc)
    (ncb:norm_cb)
    (us:universes)
    (args:args)
  : option term
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed e11 a11 ncb) (fun a11 ->
    BU.bind_opt (unembed e12 a12 ncb) (fun a12 ->
    BU.bind_opt (unembed e13 a13 ncb) (fun a13 ->
    BU.bind_opt (unembed e14 a14 ncb) (fun a14 ->
    BU.bind_opt (unembed e15 a15 ncb) (fun a15 ->
    BU.bind_opt (unembed e16 a16 ncb) (fun a16 ->
    BU.bind_opt (unembed e17 a17 ncb) (fun a17 ->
    BU.bind_opt (unembed e18 a18 ncb) (fun a18 ->
    BU.bind_opt (unembed e19 a19 ncb) (fun a19 ->
    BU.bind_opt (unembed e20 a20 ncb) (fun a20 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20) in
    Some (embed er (PO.psc_range psc) r ncb)))))))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_1
    (name : string)
    cb
    (f : 't1 -> 'r)
    (e1:NBET.embedding 't1)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    let r = interp_ctx name (fun () -> f a1) in
    Some (NBET.embed er cb r))
  | _ ->
    None

let mk_total_nbe_interpretation_2
    (name : string)
    cb
    (f : 't1 -> 't2 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    let r = interp_ctx name (fun () -> f a1 a2) in
    Some (NBET.embed er cb r)))
  | _ ->
    None

let mk_total_nbe_interpretation_3
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3) in
    Some (NBET.embed er cb r))))
  | _ ->
    None

let mk_total_nbe_interpretation_4
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4) in
    Some (NBET.embed er cb r)))))
  | _ ->
    None

let mk_total_nbe_interpretation_5
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5) in
    Some (NBET.embed er cb r))))))
  | _ ->
    None

let mk_total_nbe_interpretation_6
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6) in
    Some (NBET.embed er cb r)))))))
  | _ ->
    None

let mk_total_nbe_interpretation_7
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7) in
    Some (NBET.embed er cb r))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_8
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8) in
    Some (NBET.embed er cb r)))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_9
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9) in
    Some (NBET.embed er cb r))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_10
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) in
    Some (NBET.embed er cb r)))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_11
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11) in
    Some (NBET.embed er cb r))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_12
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12) in
    Some (NBET.embed er cb r)))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_13
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13) in
    Some (NBET.embed er cb r))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_14
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14) in
    Some (NBET.embed er cb r)))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_15
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15) in
    Some (NBET.embed er cb r))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_16
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16) in
    Some (NBET.embed er cb r)))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_17
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17) in
    Some (NBET.embed er cb r))))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_18
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18) in
    Some (NBET.embed er cb r)))))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_19
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (e19:NBET.embedding 't19)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    BU.bind_opt (NBET.unembed e19 cb a19) (fun a19 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19) in
    Some (NBET.embed er cb r))))))))))))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_20
    (name : string)
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 't11 -> 't12 -> 't13 -> 't14 -> 't15 -> 't16 -> 't17 -> 't18 -> 't19 -> 't20 -> 'r)
    (e1:NBET.embedding 't1)
    (e2:NBET.embedding 't2)
    (e3:NBET.embedding 't3)
    (e4:NBET.embedding 't4)
    (e5:NBET.embedding 't5)
    (e6:NBET.embedding 't6)
    (e7:NBET.embedding 't7)
    (e8:NBET.embedding 't8)
    (e9:NBET.embedding 't9)
    (e10:NBET.embedding 't10)
    (e11:NBET.embedding 't11)
    (e12:NBET.embedding 't12)
    (e13:NBET.embedding 't13)
    (e14:NBET.embedding 't14)
    (e15:NBET.embedding 't15)
    (e16:NBET.embedding 't16)
    (e17:NBET.embedding 't17)
    (e18:NBET.embedding 't18)
    (e19:NBET.embedding 't19)
    (e20:NBET.embedding 't20)
    (er:NBET.embedding 'r)
    (us:universes)
    (args:NBET.args)
  : option NBET.t
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _); (a12, _); (a13, _); (a14, _); (a15, _); (a16, _); (a17, _); (a18, _); (a19, _); (a20, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed e11 cb a11) (fun a11 ->
    BU.bind_opt (NBET.unembed e12 cb a12) (fun a12 ->
    BU.bind_opt (NBET.unembed e13 cb a13) (fun a13 ->
    BU.bind_opt (NBET.unembed e14 cb a14) (fun a14 ->
    BU.bind_opt (NBET.unembed e15 cb a15) (fun a15 ->
    BU.bind_opt (NBET.unembed e16 cb a16) (fun a16 ->
    BU.bind_opt (NBET.unembed e17 cb a17) (fun a17 ->
    BU.bind_opt (NBET.unembed e18 cb a18) (fun a18 ->
    BU.bind_opt (NBET.unembed e19 cb a19) (fun a19 ->
    BU.bind_opt (NBET.unembed e20 cb a20) (fun a20 ->
    let r = interp_ctx name (fun () -> f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20) in
    Some (NBET.embed er cb r)))))))))))))))))))))
  | _ ->
    None
