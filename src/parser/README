Parser
------

The parser is implemented as a menhir grammar in
FSTAR_HOME/ocaml/fstar-lib/FStar_Parser_Parse.mly

To call into the parser from F*, we have a wrapper written in OCaml
with an F* interface:

* FStar.Parser.ParseIt.fsti: This is the F* interface

* FSTAR_HOME/ocaml/fstar-lib/FStar_Parser_ParseIt.ml: This is its
  implementation

It provides an API that allows parsing and entire file, a fragment of
a file, or a single declaration. We also have a small grammar included
in the same menhir file to parse some options on the F* command line
and this is exposed by ParseIt too.

Lexer
-----

The lexer is written using sedlex in
FSTAR_HOME/ocaml/fstar-lib/FStar_Parser_LexFStar.ml.

It uses a small wrapper for the OCaml Lexing module implemeted in
FSTAR_HOME/ocaml/fstar-lib/FStar_SedLexing.ml


If you want to modify the parser, you need a recent version of menhir
(at least december 2016). Also the printer in
[src/parser/FStar.Parser.ToDocument.fs] should be kept up to date with
the parser as much as possible since it tries to keep the same general
structure as the parser.

If you're adding a new token, you need to edit:

- [src/parser/ml/FStar_Parser_LexFStar.ml] to add it to the parser
  keyword table (OCaml)

- [FStar_Parser_Parse.mly] to expose it to the parser, possibly with
  an adequate precedence
